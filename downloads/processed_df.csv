number,Questions,Answers,Texts,Score
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,high risk problem address make sure feasible may also used show company software possibly programmed,3.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulate portion desired final product quick easy small specific job way help see may solve final project,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulates behavior portion desired software product allow error checking,4.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,defined specification phase stimulates behavior portion desired software product meaning temporary solution refined used extensively,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,used let user first idea completed allow client evaluate generate much feedback including software specification project estimation total project,3.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,find error finalized,2.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,address major issue creation way account possible bug possible prove tangible,2.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,break whole program simulate part final,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,provide example model finished performed provides foresight challenges would encountered provides opportunity introduce change finished,3.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulating behavior portion desired software product,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,stimulates behavior portion desired software product,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulates behavior portion desired software product,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,lay basic give starting point actual,2.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulate part,4.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,provides basic groundwork enhance improve solution,2.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,part specification phase software solving employed illustrate key problem solved sometimes serf base expand upon,4.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulates behavior portion desired software product,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,provides limited proof concept verify client actually programming whole application,2.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,test main function leaving finer detail,2.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,get early feedback user early stage development show user first idea look like make sure meet requirement intense programming begin,2.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulates behavior portion desired software product,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulates behavior portion desired software product,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,used collect data,1.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,ease understanding discussion ease understanding,2.5
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,simulates behavior portion desired software product,5.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,help spot key problem may arise actual programing,2.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,give general idea end product without time effort write entire,3.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,show certain part work supposed,3.0
1.1,What is the role of a prototype program in problem solving?,simulate behaviour portion desired software product,programming approach programming enables one take organized approach developing effective minimal error strategic pattern e book gave example costumer withdrawing money bank approach taking pseudo code level ooa design lvl proceeding creating solution,2.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 7,refining possibly design phase reveals problem design production affected program unworkable current form lead later production time originally estimated also affect coding may need rewrite code program remove error,3.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 8,implementation phase maintenance phase effected,4.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 9,verification coding refining solution maintenance,4.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 10,rup elaboration phase refined project vision iterative development core system development system requirement accurate time cost estimate construction phase iterative development remaining system transition phase deployment system,3.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 11,refining solution production maintenance,3.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 12,elaboration construction transition affected,2.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 13,refining production maintenance,3.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 14,refining solution,4.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 15,verification debugging,2.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 16,refining coding,5.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 17,second half elaboration phase construction phase transition phase,2.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 18,refining step production step maintenance,3.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 19,elaboration construction transition,2.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 20,refining,3.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 21,direct influence final version program debugging finalization revision,1.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 22,directly refining coding refining right phase coding right phase indirectly production maintenance refining occurs last two,5.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 23,refining production maintenance,3.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 24,depending work done spread throughout process prevent error showing later due lack foresight,1.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 25,elaboration construction transition,2.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 26,except setting program requirement test fails change whole design implementation etc program well final outcome,1.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 27,refining production maintenance,3.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 28,coding refining,5.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 29,refining production maintenance,3.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 30,removing logical error valid data random data actual data,1.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 31,1 specification 2 design 3 risk analysis 4 verification 5 coding 6 7 refining 8 production 9 maintenance,2.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 32,refining production maintenance,3.5
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 33,could affect part could make go back specification test well,2.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 34,coding,3.0
1.2,What stages in the software life cycle are influenced by the testing stage?,testing stage influence coding stage phase 5 solution refinement stage phase 35,individual component step analysis design implementing code well entire system tested execution requirement identified analysis e main output,1.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,modular ability ability reuse part program later another program sometimes completely different goal program also make easier debug code dividing code class specific job program fails one job one class debug good security purpose allows let someone use program sort list without give access source code also allows use inheritance polymorphism,4.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,type flexible making easier add modify program also type fail safe program check individual module eliminates redundant code make program easier read programmer debugging program easier track source problem within module rather 2 million line program,5.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class reused program maintenance verification easier,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,oop allows u build class object three principle make oop encapsulation object combine data operation inheritance class inherit property class polymorphism object determine appropriate operation execution time,2.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class reused program maintenance verification easier accomplish,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,allows programmer use class changed manipulated affecting entire class hold attribute affect,1.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,reusable component extensibility maintainability reduces large problem smaller manageable problem,4.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,encapsulation object combine data operation inheritance class inherit property class polymorphism object determine appropriate operation execution time,2.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,easier debug reusability,3.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,usability ease maintenance,4.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,one hide inner detail technique known encapsulation object combine data operation cannot see work another advantage reuse class defined earlier program method known inheritance finally another advantage object determine appropriate operation execution time technique known polymorphism,5.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class reused program maintenance verification easier,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,using different module allows easier debugging,2.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,data encapsulation concept use function method manipulate data,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,modular reusable code allowing faster deployment solution general view solution,4.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,coding debugging program usually easier either compiler specify working incorrectly function assigned easier identify code also look organized easier read help avoid redundant coding post maintenance also easier also module reused several time program without much hassle abstraction art breaking one big problem smaller simpler problem solving many smaller problem shared unique complex problem creating module solve smaller repeated problem save time encounter,5.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,variable remain private code easily modified reusable well easily implemented mention easier read follow along observer,4.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,data abstraction control possible isolate element element lot easier prevent tampering data,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,encapsulation object use operation without knowing operation work inheritance cut redundancy reusing earlier class polymorphism object select correct operation use situation,4.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,make easier reuse adapt previously written code separate complex program smaller easier understand class,4.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class reused program maintenance verification easier,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class fused program maintenance verification easier,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,data abstraction easier maintenance usability,5.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class reused program maintenance verification easy,4.0
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,1 existing class reused 2 program maintenance verification easier,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,information hidden easier debug easier manageable,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class reused program maintenance verification easier,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,existing class reused program maintenance verification easier,3.5
1.3,What are the main advantages associated with object-oriented programming?,abstraction reusability,well one encapsulation value variable inside private unless method written pas info outside well inheritance subclass inherits variable method super class example book included obj clock obj alarm would still use clock first class,3.5
1.4,Where do C plus plus programs begin to execute?,main function,function int main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,function main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,c main method,5.0
1.4,Where do C plus plus programs begin to execute?,main function,c program main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,int main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main method,5.0
1.4,Where do C plus plus programs begin to execute?,main function,testing phase,0.0
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,function main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main method,5.0
1.4,Where do C plus plus programs begin to execute?,main function,root,2.5
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,c execution main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,function main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,loading required include statement library main method begin execution,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,c execution main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,beging execute main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main function int main,5.0
1.4,Where do C plus plus programs begin to execute?,main function,c execution main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,main function,5.0
1.4,Where do C plus plus programs begin to execute?,main function,within main function,5.0
1.5,What is a variable?,location memory store value,integer string program,2.0
1.5,What is a variable?,location memory store value,programming structure hold data uniquely named programmer hold data assigned new value assigned program finished,4.5
1.5,What is a variable?,location memory store value,location memory value stored,5.0
1.5,What is a variable?,location memory store value,location computer memory value stored later retrieve value,5.0
1.5,What is a variable?,location memory store value,location computer memory value stored use program name value type size,5.0
1.5,What is a variable?,location memory store value,named object hold numerical letter value,3.5
1.5,What is a variable?,location memory store value,symbol name value number example used number stand given number programmer refer number using name,4.0
1.5,What is a variable?,location memory store value,location computer memory value stored use program,5.0
1.5,What is a variable?,location memory store value,identifier hold location memory,4.0
1.5,What is a variable?,location memory store value,block memory hold specific type data,5.0
1.5,What is a variable?,location memory store value,location computer memory stored use program,5.0
1.5,What is a variable?,location memory store value,location memory value stored,5.0
1.5,What is a variable?,location memory store value,value word assume set value,3.0
1.5,What is a variable?,location memory store value,pointer location memory,4.0
1.5,What is a variable?,location memory store value,memory address specific type stored data mathematical perspective symbol representing fixed definition changing value,5.0
1.5,What is a variable?,location memory store value,value subject change computer memory used program program change value recall later act directly,5.0
1.5,What is a variable?,location memory store value,symbol stand value may may change depending program,4.0
1.5,What is a variable?,location memory store value,placeholder hold information used program example int hold 1 2 3 4 68 72 256 etc float hold 1 54 55 55 1 24 5 657 8 8123 et char hold b c e f 4 5 6 p etc,4.5
1.5,What is a variable?,location memory store value,stored value used program,4.5
1.5,What is a variable?,location memory store value,way store different value program number word letter etc,4.5
1.5,What is a variable?,location memory store value,object location memory value stored,3.5
1.5,What is a variable?,location memory store value,location memory value stored,5.0
1.5,What is a variable?,location memory store value,object data stored,3.5
1.5,What is a variable?,location memory store value,location memory value stored,5.0
1.5,What is a variable?,location memory store value,location memory value stored,5.0
1.5,What is a variable?,location memory store value,location computer memory value stored use program,5.0
1.5,What is a variable?,location memory store value,location computer memory value stored use program,5.0
1.5,What is a variable?,location memory store value,location memory data stored retrieved,5.0
1.5,What is a variable?,location memory store value,method identifier would say use bind data object memory location stored location accessed manipulated later name called,5.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,right used good practice declare beginning label food,2.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,function main using variable,3.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,local inside method function used beginning method global outside function method generally function defined,5.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,ever defined either inside block locally outside block globally,4.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,actually used main use globally,4.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,good programing practice main least used,2.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,globally main method also outside subject method scoped within would still beginning method inside,5.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,local inside method global body,5.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,main function,2.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,globally entire locally individual function including statement,4.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,usually beginning used always contain name data type,3.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,inside method,2.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,top,1.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,global body code local function used unless function passed variable always use,5.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,usually beginning module c code,2.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,main function usually top code almost anywhere must code use act upon,3.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,beginning main start,2.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,declaration function statement statement body statement namespaces header etc almost anywhere anywhere long line,2.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,declaration variable data type,1.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,anywhere code top middle code anywhere,3.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,used,2.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,anywhere scope used,3.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,class method,2.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,inside function scope outside function scope case global,5.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,global main function local function,4.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,usually beginning c long appear called upon,4.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,main function operation attempted,2.0
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,anywhere declare depends want accessible scope,4.5
1.6,Where are variables declared in a C plus plus program?,variable declared anywhere program declared inside function local variable outside function global variable,depends global side source code used every scope however local variable one local function etc obviously need outside variable seeing used function block called,4.5
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,first evaluates condition executes line code 0 time executes line code evaluates condition,4.5
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,statement evaluate whether loop running block contained within least difference statement possibility never used statement hand always run least evaluating whether run,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop loop always cycle loop least loop always,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop used execute block code long condition true loop used execute block code long condition satisfied loop test condition execution content loop test condition execution content least,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,termination condition usually end loop run least condition false begin loop never run,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop check make sure true executing loop execute checking see run,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,test condition loop first chance loop never run loop always run test determine run,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop always executes loop conditional true run,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,condition checked validity repeated condition false code performed least checked valid condition continue,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,statement evaluate executing cycle loop including first cycle meaning loop always execute run evaluate running cycle loop ensuring loop always executes least one time,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,statement block always executed atleast execute condition true,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop always executes,4.5
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,process met always process continue met,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,run embedded code least command necessarily,4.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,test true first running run first checking,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,body always executes least execute unless condition true,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,statement within block loop always executed least regardless condition whereas loop may never executed condition met,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop always run loop performs test running loop,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,test condition start loop condition tested,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop terminates beginning loop terminates end loop,3.5
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop body always executes least,3.5
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop evaluates expression top loop decides need execute always executes least evaluates expression bottom loop,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,always execute piece code least checking condition always check condition first,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,pass atleast 1 time checking condition however would fail enter loop condition fails first place,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop check condition true first true execute loop executes check condition condition true would execute loop would execute atleast,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,answer,0.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop always execute atleast loop may never execute depending teh condition,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,loop pre check check condition executes code within block loop post check check condition block executes run least matter condition,5.0
1.7,What is the main difference between a while and a do ... while statement?,block inside statement execute least,construct consists block code condition first code within block executed condition evaluated done proven false loop test condition code within block executed,5.0
2.1,What is typically included in a class definition?,data member attribute member function,u usually set get display mess ge message tell property reveal implementation could anything want,2.0
2.1,What is typically included in a class definition?,data member attribute member function,attribute said also whether subclass also whether public private protected,4.0
2.1,What is typically included in a class definition?,data member attribute member function,information telling compiler data member member function belong,5.0
2.1,What is typically included in a class definition?,data member attribute member function,since user defined body declaration contain member either data function declaration optionally access specifier example specifier would public private protected keyword body enclosed bracket,5.0
2.1,What is typically included in a class definition?,data member attribute member function,object data,2.0
2.1,What is typically included in a class definition?,data member attribute member function,specific name includes information defined implementation detail etc,3.0
2.1,What is typically included in a class definition?,data member attribute member function,data member member function,5.0
2.1,What is typically included in a class definition?,data member attribute member function,usually contains function data member,5.0
2.1,What is typically included in a class definition?,data member attribute member function,data member member function,5.0
2.1,What is typically included in a class definition?,data member attribute member function,member function,3.5
2.1,What is typically included in a class definition?,data member attribute member function,member function data member belonging,5.0
2.1,What is typically included in a class definition?,data member attribute member function,public private area includes function variable used,4.5
2.1,What is typically included in a class definition?,data member attribute member function,keyword followed name inside declare public private declaration,3.5
2.1,What is typically included in a class definition?,data member attribute member function,includes function definition,3.0
2.1,What is typically included in a class definition?,data member attribute member function,begin followed name usually constructor data member member function delineates,5.0
2.1,What is typically included in a class definition?,data member attribute member function,data method,4.5
2.1,What is typically included in a class definition?,data member attribute member function,constructor function variable accessible possibly class depending done,4.5
2.1,What is typically included in a class definition?,data member attribute member function,member function data member,5.0
2.1,What is typically included in a class definition?,data member attribute member function,public section private section must semicolon set end,2.5
2.1,What is typically included in a class definition?,data member attribute member function,member function data member,5.0
2.1,What is typically included in a class definition?,data member attribute member function,data member member function,5.0
2.1,What is typically included in a class definition?,data member attribute member function,data member member function,5.0
2.1,What is typically included in a class definition?,data member attribute member function,name public data type constructor method function,3.5
2.1,What is typically included in a class definition?,data member attribute member function,constructor several data member least one public data member method,4.5
2.1,What is typically included in a class definition?,data member attribute member function,name two curly parenthesis public private,2.0
2.1,What is typically included in a class definition?,data member attribute member function,data member member function,5.0
2.1,What is typically included in a class definition?,data member attribute member function,data function,4.5
2.1,What is typically included in a class definition?,data member attribute member function,function data member belong,5.0
2.1,What is typically included in a class definition?,data member attribute member function,variable function definition,5.0
2.1,What is typically included in a class definition?,data member attribute member function,expanded concept data structure hold data function executed,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,member component particular class functioning component class,3.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,field declared class variable declared method,2.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,member declared class outside function unlike variable object class keep copy member stored memory,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,variable represent attribute class definition variable declared body cannot used outside body terminates value variable lost,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,cannot accessed outside declared member normally private variable function declared private accessible function class declared,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,part c class structure store certain type available used derive desired outcome,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,accessed within scope declaration,3.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,member attribute used outside used outside value lost terminates,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,member permanent attribute class variable lost scope end,4.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,member declared class definition outside body class definition variable declared definition body,4.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,globally accessible accessible,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,accessed accessed throughout program,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,variable used within scope declaration,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,general term describing object instantiated within variable refers scope may located anything control structure class variable whose scope member function,2.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,exists permanently program memory long run temporal used operate exists long run,3.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,variable used within member set public access used throughout,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,lost exit block code,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,every access modify used line declaration next closing lost memory,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,accessible function class available value lost close,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,member variable declared class definition outside body class function variable used within declaration,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,accessed outside class whereas cannot,4.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,variable cannot used outside body terminates value variable lost member variable class definition exist throughout life object,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,static change value freely,2.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,useable within defined whereas available method within class,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,declared defintion body cannot used outside member accessible class,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,member variable declared definition body cannot used outside body terminates value variable lost,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,available,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,variable accessed function member accessed throughout class,4.5
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,accessible anywhere class accessible particular freed exit,5.0
2.2,What is the difference between a data member and a local variable inside a member function?,data member accessed member function inside class defintion local variable accessed inside member function defines,encapsulated within class object static shared instance class however used block declared whole class wise would called global variable,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,initializes object object class class performs task display line text kind mathematical operation,2.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,constructor function function constructor also function nearly infinite purpose constructor always create instance whichever class using change something function change also,3.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,unlike regular function constructor used initialize object data created constructor must also given name class cannot return value,5.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,typically used initialized data member allocate resource instance memory file etc also cannot return value function operation maybe globally defined,4.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,constructor cannot return value cannot specify return type normally constructor declared public,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,method start new instance class example employee employee1 parameter start new instance object type employee simply module w program completes single desired task,3.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,called whenever new object class made,3.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,return date return type function return date return data return type,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,automatically called whenever instance class created must explicitly called user,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,constructor cannot return value cannot specify return type like function,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,used initialize object data created,3.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,initialises everything nothing left empty random variables modifies variable data,2.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,initialized value execution instantiation provides default value,3.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,set default value variable object instantiated whereas allows interaction object,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,used create object employed main program may may execute code along set code executes called create new object,3.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,initializes data member function actually perform task constructor cant return value either,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,need type used initialize variable,3.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,constructor return type,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,creates class object memory function perform action object,3.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,constructor cannot return value,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,initializes value usual performs sort operation,2.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,used initialize object data created call made implicitly object created must defined name class also cannot return value like,5.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,used create instance class name class cannot name class computes data,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,initializes class instance performs whatever task written,3.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,cannot return value even void get return value,4.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,cannot return value even void used initialize object data created whereas created specific task return value,5.0
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,initializes object part object,2.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,constructor initialize data used calculation,2.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,called class created called time,3.5
2.3,What is the difference between a constructor and a function?,constructor called whenever object created whereas function need called explicitely constructor return type function indicate return type,special block statement called object created either declared statically constructed stack however portion code within larger program performs specific task independent rest code,4.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,compiler creates define one class file,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,compilation,3.5
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,class explicitly include,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,parameter set used,3.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,class explicitly include,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,argument passed,1.5
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,one already specific class,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,program compiles,3.5
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,provided programmer class,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,class explicitly include,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,main function code,1.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,whenever dont specified,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,non provided,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,c present,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,specified class class instantiated program,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,exists one needed parameter declared,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,compiler creates automatically unless specifically one,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,class explicitly include,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,user defined exists,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,class explicitly include compiler creates one,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,provide,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,class explicitly include,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,c creates compilation one provided,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,class explicitly include,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,compiler provide one class explicitely include constructor,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,programmer explicitly include,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,one explicitly stated,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,one explicitly included class,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,dont specify constructor,5.0
2.4,When does C plus plus create a default constructor?,constructor provided compiler provides one default constructor defined class compiler create default constructor,beginning run compiler matter fact c generates class provided constructor provided user,5.0
2.5,How many constructors can be created for a class?,unlimited number,one per,0.0
2.5,How many constructors can be created for a class?,unlimited number,want long different parameter,5.0
2.5,How many constructors can be created for a class?,unlimited number,limit number like function overloaded,5.0
2.5,How many constructors can be created for a class?,unlimited number,depends type defined typically would constructor call object,1.5
2.5,How many constructors can be created for a class?,unlimited number,c constructor overloaded one constructor different parameter,5.0
2.5,How many constructors can be created for a class?,unlimited number,1,0.0
2.5,How many constructors can be created for a class?,unlimited number,number want,5.0
2.5,How many constructors can be created for a class?,unlimited number,one,0.0
2.5,How many constructors can be created for a class?,unlimited number,default one may overloaded create necessary,5.0
2.5,How many constructors can be created for a class?,unlimited number,want,5.0
2.5,How many constructors can be created for a class?,unlimited number,want different parameter,5.0
2.5,How many constructors can be created for a class?,unlimited number,infinite,5.0
2.5,How many constructors can be created for a class?,unlimited number,need,5.0
2.5,How many constructors can be created for a class?,unlimited number,needed depending variable one wish directly modify leave default instantiating object,5.0
2.5,How many constructors can be created for a class?,unlimited number,large amount given overloading two different type number parameter said overloaded c recognize constructor use based type variable passed returned,5.0
2.5,How many constructors can be created for a class?,unlimited number,depends number object object constructor,2.5
2.5,How many constructors can be created for a class?,unlimited number,theoretically unlimited long defined programmer,5.0
2.5,How many constructors can be created for a class?,unlimited number,needed,5.0
2.5,How many constructors can be created for a class?,unlimited number,wanted needed,5.0
2.5,How many constructors can be created for a class?,unlimited number,several,4.5
2.5,How many constructors can be created for a class?,unlimited number,one,0.0
2.5,How many constructors can be created for a class?,unlimited number,one,0.0
2.5,How many constructors can be created for a class?,unlimited number,infinite long signature different,5.0
2.5,How many constructors can be created for a class?,unlimited number,depends number data member,1.5
2.5,How many constructors can be created for a class?,unlimited number,one,0.0
2.5,How many constructors can be created for a class?,unlimited number,overload need,5.0
2.5,How many constructors can be created for a class?,unlimited number,programmer want create,5.0
2.5,How many constructors can be created for a class?,unlimited number,one,0.0
2.5,How many constructors can be created for a class?,unlimited number,want long unique argument list,5.0
2.5,How many constructors can be created for a class?,unlimited number,user decides use,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,require additional information need passed inside parenthesis execute requires one parameter passed order complete task,4.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,programmer declares using main like declaring variable programmer know using future yet say going use answer question give name character common practice placed beginning program includes main gut programmer decides going tell take whatever information given performs operation work sort like brain brain take input based upon input performs way producing output defintion placed outside main function entity thought,2.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,tell compiler name return type number type parameter without revealing implementation contained,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,declaration definition w multiple parameter often require one piece information perform task,3.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,declaration tell compiler name return type type parameter,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,show return type necessary parameter includes name parameter defines object actually capable,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,tell user data type go type returned,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,located h file contains access name parameter type contains code perform activity,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,used reference compiler defined later actual complete return type parameter etc,4.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,describes class public interface without revealing class member implementation,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,definition compiler us check call correct,2.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,include actual code code executed program,3.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,declares used program,3.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,lay name return type number type parameter expects receive certain order detail prototype,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,code defines placed bracket determines operation show public interface without exposing implementation show name return type type parameter,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,declaration existing cant used actual created within tell compiler,3.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,creates framework call actually programmed created final product,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,describes class public interface without providing work contains inner working,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,state function class compilation actually hold source function,3.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,prototype tell compiler name return type type parameter definition actually implement member function,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,specifies parameter includes parameter code body,4.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,prototype describe class public interface,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,declares name return type input type also defines scope variable process return,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,simply declares function parameter includes necessary variable actual code,4.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,function declaration specifies,3.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,include return type name parameter needed write code,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,contains code work show output input name,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,describe class public interface without revealing class member implementation definition show implementation done,4.5
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,name return type argument list defines well actually,5.0
2.6,What is the difference between a function prototype and a function definition?,function prototype includes function signature e name function return type parameter type function definition includes actual body function,describes class interface without reviling whatever inside,4.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,list function class hiding inner working function,4.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,main used share information among various file,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,file separate file class defined allow compiler recognize class used elsewhere,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,,0.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,consists reusable source code class convention h filename extension differs cpp file contain source code,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,provide information content library includes definition class declaration function data type constant,4.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,show user type go come function allow user manipulate actual code function,4.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,file declares class member function,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,allows separation declaration implementation separate file,4.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,access c standard library make certain class like class string work,1.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,instruct compiler interface library user written component,2.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,create common area contain reusable function,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,declare function used class,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,include hat h allows use hat container called act pulling name hat hat includes function storage retrieval content mainly put peek pull,1.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,hold reusable content module separate actual source code easily referenced employed different program,4.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,used store list prototype function data member,5.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,cross communication method source file help limit size individual program without file program 1 large lump code thus fairly hard debug traverse,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,contains reusable source code use class,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,separate source code main function allows method class included program without direct coding allows usability,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,file reusable source code program use,2.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,hide definition detail class also help readability main c,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,allow compiler recognize class used elsewhere,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,declares class data function available class,4.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,file contain code used multiple file,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,allow compiler recognize class used elsewhere,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,allow compiler recognize class used elsewhere,3.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,promote function reusability,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,class definition placed,3.0
2.7,What is the role of a header-file?,store class interface including data member member function prototype,usually contains class function prototype,4.5
2.7,What is the role of a header-file?,store class interface including data member member function prototype,contains standard c library e string,1.0
3.1,What does a function signature include?,name function type parameter,includes name program type parameter take also brief description,4.5
3.1,What does a function signature include?,name function type parameter,includes specific information input output variable type many,3.0
3.1,What does a function signature include?,name function type parameter,includes name type argument,5.0
3.1,What does a function signature include?,name function type parameter,consists prototype tell general information name parameter scope miscellaneous information,4.5
3.1,What does a function signature include?,name function type parameter,includes name type argument,5.0
3.1,What does a function signature include?,name function type parameter,name parameter scope general information,4.5
3.1,What does a function signature include?,name function type parameter,includes name parameter list return type signature must different,5.0
3.1,What does a function signature include?,name function type parameter,input parameter return type,3.0
3.1,What does a function signature include?,name function type parameter,portion prototype tha name argument return type,5.0
3.1,What does a function signature include?,name function type parameter,name type argument,5.0
3.1,What does a function signature include?,name function type parameter,name type argument,5.0
3.1,What does a function signature include?,name function type parameter,includes name type argument,5.0
3.1,What does a function signature include?,name function type parameter,identification data type parameter name data type variable,5.0
3.1,What does a function signature include?,name function type parameter,return type input parameter,3.0
3.1,What does a function signature include?,name function type parameter,includes method name input type,5.0
3.1,What does a function signature include?,name function type parameter,includes name type argument return type,5.0
3.1,What does a function signature include?,name function type parameter,result type thrown error,2.0
3.1,What does a function signature include?,name function type parameter,name input parameter,5.0
3.1,What does a function signature include?,name function type parameter,name type argument includes number type order parameter appear,5.0
3.1,What does a function signature include?,name function type parameter,name type argument,5.0
3.1,What does a function signature include?,name function type parameter,includes name type argument,5.0
3.1,What does a function signature include?,name function type parameter,includes return type parameter semi colon,3.0
3.1,What does a function signature include?,name function type parameter,name type argument,5.0
3.1,What does a function signature include?,name function type parameter,name parameter,5.0
3.1,What does a function signature include?,name function type parameter,name type argument,5.0
3.1,What does a function signature include?,name function type parameter,portion prototype includes name type argument,5.0
3.1,What does a function signature include?,name function type parameter,name parameter,5.0
3.1,What does a function signature include?,name function type parameter,name parameter,5.0
3.1,What does a function signature include?,name function type parameter,name type argument,5.0
3.1,What does a function signature include?,name function type parameter,return type parameter list,3.0
3.1,What does a function signature include?,name function type parameter,includes name type argument specify return type scope must unique signature,5.0
3.2,What is the scope of global variables?,file scope,function follows deceleration source code file allowed access also retrain value throughout execution program,5.0
3.2,What is the scope of global variables?,file scope,accessed c file anywhere,2.5
3.2,What is the scope of global variables?,file scope,file,5.0
3.2,What is the scope of global variables?,file scope,created placing variable declaration outside class function definition retain value throughout execution program referenced function follows declaration definition source file,2.5
3.2,What is the scope of global variables?,file scope,variable identifier retains value throughout execution program file,5.0
3.2,What is the scope of global variables?,file scope,used function long appropriate h file hold variable included,4.0
3.2,What is the scope of global variables?,file scope,accessed part program referenced function follows declaration definition source file,5.0
3.2,What is the scope of global variables?,file scope,accessed class object class,3.0
3.2,What is the scope of global variables?,file scope,file variable know function throughout file,5.0
3.2,What is the scope of global variables?,file scope,entire program,4.5
3.2,What is the scope of global variables?,file scope,file placed outside function,5.0
3.2,What is the scope of global variables?,file scope,file,5.0
3.2,What is the scope of global variables?,file scope,used throughout program,4.5
3.2,What is the scope of global variables?,file scope,variable b accessed class wit object class,3.0
3.2,What is the scope of global variables?,file scope,file level,5.0
3.2,What is the scope of global variables?,file scope,file,5.0
3.2,What is the scope of global variables?,file scope,accessible function within program,4.5
3.2,What is the scope of global variables?,file scope,accessible anywhere program long public,4.5
3.2,What is the scope of global variables?,file scope,referenced function following declaration definition inside source file,5.0
3.2,What is the scope of global variables?,file scope,globally anywhere program,4.5
3.2,What is the scope of global variables?,file scope,file,5.0
3.2,What is the scope of global variables?,file scope,entire program,4.5
3.2,What is the scope of global variables?,file scope,throughout execution program,4.5
3.2,What is the scope of global variables?,file scope,variable declared function class use variable,4.5
3.2,What is the scope of global variables?,file scope,entire program file,5.0
3.2,What is the scope of global variables?,file scope,throughout programming,4.5
3.2,What is the scope of global variables?,file scope,whole code,4.5
3.2,What is the scope of global variables?,file scope,file,5.0
3.2,What is the scope of global variables?,file scope,referenced function follows declaration definition source file,5.0
3.2,What is the scope of global variables?,file scope,program accessible anywhere program,4.5
3.2,What is the scope of global variables?,file scope,exist throughout entire script value changed anytime code function,4.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,expands function definition place called use many time need expands function,4.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,expands function call function code get inserted caller code stream conceptually similar happens define macro depending zillion thing improve performance optimizer procedurally integrate called code optimize called code caller,4.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,keyword advises copy function code place avoid function call however typically ignore qualifier smallest,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,ignore qualifier typically smallest,3.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,placing qualifier function return type function definition advises generate copy function code place avoid function call,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,declare function header int main call function anytime main program quickly easily,2.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,expands small function making code longer also make run faster,4.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,function treated separate unit like,3.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,program compiles copy function place avoiding function call,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,replaces instance function call code resulting longer faster program,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,ignore qualifier typically smallest,3.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,ignores qualifier typically smallest,3.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,function small enough expand run faster avoid making many call function,4.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,treat function,2.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,copied place instead referenced,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,creates copy function code place make function call add function call stack,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,generates copy function coding eliminates calling function,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,answered,0.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,generates copy function code inserting program,4.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,tell make copy function code place avoid function call typically ignores except smallest,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,ignore qualifier typically smallest,2.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,multiple copy function code inserted program making bigger,4.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,ignores qualifier,2.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,generates copy function needed,3.5
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,compiler includes copy instead making function call usually small,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,generate copy function code place appropriate avoid function call,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,instead calling function every time invoked replace function call copy function body,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,expands function program,4.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,generates copy code place avoid function call,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,function call replaced code defined function,5.0
3.3,How does the compiler handle inline functions?,make copy function code every place function call made,expands function call function code get inserted caller code stream conceptually similar happens define macro depending zillion thing improve performance optimizer procedurally integrate called code optimize called code caller,4.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,overall program better performance mean faster copy large amount data,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,change original passing limit memory needed program,4.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,passing eliminate pas value overhead copying large amount data,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,often efficient pas reference rather large object function allows compiler pas address object maintaining syntax would used access object,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,pas good performance reason eliminate pas value overhead copying large amount data,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,alter original value variable,3.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,make copy stuff,4.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,use unessesary memory space copy variable function,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,eliminates need copy large amounts data,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,change data stored variable directly,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,give called ability access modify caller argument data,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,give called ability access modify caller argument data directly,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,efficient change variable online inside outside new value used elsewhere,3.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,make another copy waste memory,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,passing eliminates copying large amount data typical pas value,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,large size computing time memory space wasted copying argument passing also pas give called permission read edit argument directly,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,give access caller data directly also allows modifying data,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,le overhead overall modify variable directly,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,original variable referenced modified directly called,3.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,give ability access modify caller argument data directly,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,give called ability access modify caller argument data directly,3.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,le overhead value especially using large number,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,large data item without copying entire data point reducing execution time about memory space needed,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,data modified directly instead making copy data improves execution time large amount data,4.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,function directly modify,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,give access modify caller argument data directly eliminate pas value overhead copying large amount data,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,take le memory thus would make program faster,4.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,able modify variable referenced directly,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,pas modify value opposed passing value cannot change value,3.5
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,memory address sent copy object sent need made make run faster save memory,5.0
3.4,What is the main advantage associated with function arguments that are passed by reference?,avoids making copy large data structure calling function,actual dummy subroutine referenced procedure actual argument list identifies correspondence actual provided list dummy subprogram,3.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,selects proper execute based number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,condition input used one,3.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,distinguishes signature encodes function identifier number type parameter generate type safe linkage ensures proper function called,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,distinguished signature name mangling name decoration type safe linkage ensures proper called type argument conform tpes parameter,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,selects proper function execute based number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,type initialized int char etc,3.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,selects proper function execute based number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,must return type different input parameter,3.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,examines name type order argument function,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,unique function signature,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,based number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,selects proper function execute based number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,answered,0.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,return type different input parameter,3.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,parameter,4.5
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,selects right function execute number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,creates set candidate set viable,3.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,function signature,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,number type parameter,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,function signature,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,name different parameter,3.5
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,differentiated number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,look number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,differentiates signature,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,number type order argument,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,selects proper function execute based number type order argument function call,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,parameter,4.5
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,number type order parameter,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,number type argument,5.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,signature return type argument list,4.0
3.5,How are overloaded functions differentiated by the compiler?,based function signature overloaded function called compiler find function whose signature closest given function call,function simply involve having method name within class used implement method subclass override word replaces implementation super class overloading concept providing different meaning object based context presence overloading one type polymorphism also feature programing,3.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case simplest case problem lead happen end loop condition know terminate,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,badly designed algorithm using non problem,2.5
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,occur base case omitted step written incorrectly never converges base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,loop condition met either omitting base case writing step incorrectly converge base case indefinite eventually exhausting memory,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,either omitting base case writing step incorrectly converge base case cause,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case return base value,4.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,incorrect missing base case must reduce base case must get simpler time run converge base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case change value,4.5
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,call problem diminish diminish base case cause,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,omitting base case incorrectly calling step,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,problem cannot reduced reach base case,4.5
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,lack base case writing step incorrectly converge base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,proper case leave,4.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case call converge base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case incorrectly written step converge base case lead,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,never reach successfully defines base case recursive forever happens many way progress towards base case coded poorly even contain base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,creating base case case base case never met,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,improper handling case value able handled,3.5
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case step reduce problem call,4.5
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case single return include calling static value end,3.5
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,either omitting base case writing step incorrectly reach base case cause,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,omitting base case writing call converge upon base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,either omitting base case writing step incorrectly converge base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,may occur base case defined call varied,4.5
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case building process converge base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,either omitting base case writing step incorrectly,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case program define base case simplest case never get reached,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,easily reached base case base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,never allowed reach base case,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,base case base case never met,5.0
3.6,"When defining a recursive function, what are possible causes for infinite recursion?",recursion step defined incorrectly base case included,refers situation function call type function known function said occurs designed way call self forever without stopping,3.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,involve controlled repetition structure termination test also loop forever,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,discussed earlier may used process iterative action used calculation answer described function relates,2.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition also occur indefinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement repetition structure selection structure involve repetition explicitly us repetition structure repeated function call involve termination test loop termination test base case gradually approach termination modifies counter loop termination test fails produce progressively simpler version problem occur indefinitely loop continuation condition never fails step simplify problem,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,many based control statement involve repetition involve termination test gradually approach termination occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,rely repetition base case become infinite loop anything recursive also solved,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,repeat loop condition met exit loop capable entering infinite loop,4.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,anything iterative recursively,3.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,repetitive end test,4.5
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,incorrectly writing either result infinite loop perform task,3.5
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve termination test gradually approach termination occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve termination test gradually approach termination occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,answered,0.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,anything recursively iterative,3.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,many problem solved either may go condition infinite execution termination test omitted,3.5
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,use repetition perform several simple operation algorithm successively reach certain limit involve termination test find limit slowly approach termination limit based control statement well coded poorly continue forever compiler computer either lock shuts halt operation,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve termination test within loop,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,method repeating task,2.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,involve termination test use control statement repetition solve problem also result infinite loop,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve termination test,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,base control statement involve repetition involve termination test gradually approach termination occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve termination test gradually approach termination potentially occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve termination case gradually approach termination case occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,use repetition control test terminate infinitely repeat defined correctly,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement gradually approach termination ending termination test involve repetition repeat infinitely termination requirement met,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve termination test gradually approach termination occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,used solve type problem task certain conditional statement reached called base case,3.5
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,based control statement involve repetition involve terminal test occur infinite,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,repetition termination test eventually terminate occur infinitely,5.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,need kind base case tell loop need stop,3.0
3.7,What are the similarities between iteration and recursion?,involve repetition termination test occur infinitely,able repetitive task however recursive call different parameter defines exit clause guaranteeed reached iterative includes loop iterates pre determined number time check exit clause every time,3.5
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,int n 10 10 integer int n array size array size positive integer defined user,4.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,either inputing element coding giving specifications size also possible giving specifications tell grow needed,4.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,initialize using initializer list declaration initializing size constant variable,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,pas along use vector,3.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,one way declare size using variable equal integer way size omitted declaration compiler determines size based size initializer list,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,declaration int x initialized int = 0 1 2 etc,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,1 declare int 10 2 initialize int = 0 1 2 3 compiler assume size 4,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,statically dynamically,2.5
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,explicitly int 10 variable const int size = 10 int size,4.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,length explicitly specified inputing number element bracket declaration implicitly including initializer list without number compiler automatically declare proper number element needed list,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,specify size constant variable setting element calculation,3.5
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,statically using dynamically using,4.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,define 5 1 2 3 4 5,4.5
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,static dynamic,2.5
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,manually inside bracket automatically via initializer list,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,use initializer list simply tell compiler many element want initializer list int = 10 2 3 4 5 elemental declaration int b 5 array 5 element already initialized,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,string specify stolen array name command get string another way integer initiate size start ex 40 possible 40 passed object actual about another way declare initializing program,4.5
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,implicit namely give value like 1 2 3 4 5 6 7 8 9 compiler automatically give size static declaration,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,supply integer inside bracket compiler count number element initializer list int n 5 int n = 1 2 3 4 5,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,either initializing specific initializing declaring content,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,within bracket using initializer list,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,specify number element declaration constant using constant variable future scalability,4.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,number variable,3.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,explicitly declaring bracket e int 50 implicitly initializing several value e int = 1 2 3,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,one way 10 way array size = 1 2 3 4 5 6 7 8 9 10,4.5
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,1 initializing declaration initializer list 2 size constant variable,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,initializing size bracket int 100 initializing assigning variable int = 1 2 3,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,user defined value number element initializer list,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,assign size inside bracket declare 3 set many item set equal 1 2 3,5.0
4.1,What are the two different ways of specifying the length of an array?,array declaration using initializer list,use array list program ask many element obj member number slot,4.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,used char much easier manipulate object character stored separately rather whole,2.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,us le storage change make permutation word stored without needing actually access change variable change accessed,3.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,unlike programmer must provide null terminating character must ensure large enough hold null terminating character,5.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,represented character array end null character declare object like example,5.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,one store manipulate rather variable,2.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,char make single letter actual word char array,2.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,basically however end w null character denoting end size char potential size must limited,3.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,class standard library method modify whereas char able modified user,4.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,limited size declaring end acknowledged white space,3.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,data class designed handle character data many function built class library deal however subject rule real additional functionality another class deal null character implicitly unlike must handle null character explicitly,5.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,used contains character special termination character called null character,5.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,char read individual character literal read entire,3.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,hold many size limited,4.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,sting modified function class modified user,3.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,contains additional terminating null character,4.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,null character 0 end signify end,5.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,part list one actually able pointed detected,3.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,set length virtually unlimited length,4.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,char individual letter accessed directly subscript notation subscript return entire,2.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,need termination character well size specification whether explicit implicit,5.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,individual accessed manipulated,2.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,could result data loss character initialized large enough,4.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,passed reference therefore changed memory changed variable,3.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,several built function available char individual directly accessible,3.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,declaring includes white space declaring character include white space,1.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,one element doesnt termination element null,5.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,vary length extend past length,4.0
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,cant modify individual character modify individual,2.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,class safer,3.5
4.2,What is the main difference between strings declared using the type string versus strings declared using an array of characters?,string declared using array character null element added end array,collection similar data type ex int 10 ten indicates size index give integer value mean collection group declaration data type usually cause storage allocated memory capable holding predetermined number symbol however array contain value non reference data multiple array,2.5
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,reference pointer element array,4.5
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,reference individual array element value take argument function prototype may include parameter name const array parameter,5.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,must pas array size function ex function array size,4.0
4.3,How are arrays passed to functions?,reference,usually way pas anything else specify length char array pas function sending name array example char star 20 is palindrome star sends char array function is palindrome otherwise would need send length array well,3.5
4.3,How are arrays passed to functions?,reference,pas pointer first item also pas size,3.5
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,two part array size function avoid bound error,4.0
4.3,How are arrays passed to functions?,reference,specify array name without bracket array size normally another argument function process specific number element array reference individual array element value take argument,5.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,way declaration actual function,3.0
4.3,How are arrays passed to functions?,reference,specify array name without bracket,3.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,pas name array function int bin 10 pas array like jingle bin jingle must declared correctly order receive array either prototype void jingle int definition initialization void jingle int array also worth noting function reference copy large burn memory give function complete control array however,5.0
4.3,How are arrays passed to functions?,reference,called function function must loop array get set character,2.0
4.3,How are arrays passed to functions?,reference,reference default unless specify const later make array unmodifiable,5.0
4.3,How are arrays passed to functions?,reference,function receives array array size parameter function array name array size,4.0
4.3,How are arrays passed to functions?,reference,specifying array name passing reference argument function,5.0
4.3,How are arrays passed to functions?,reference,1st must specify array name without bracket array name size two argument function call,4.0
4.3,How are arrays passed to functions?,reference,reference passing starting address array programmer specifies array name without bracket pass array size another argument function process specific number element array,5.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,function int int length,4.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,reference,5.0
4.3,How are arrays passed to functions?,reference,function read variable store return ever variable read function print content array,2.5
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,store new value assigned element meaning call function twice use last value returned first time declare new value stored reset original value,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,referenced accessed also array used without creating object,4.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,created initialized time function also destroyed function terminates,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,program initialized local array declaration first encountered initialized explicitely programmer earch element intialized zero compiler created non member cannot initialized c,4.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,array remain size throughout program execution,4.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,initialized non initialized program reach initializing line,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,available beginning program end w declaration disappears accessed within right scope,4.5
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,pre runtime size size cannot changed dynamic get size runtime,3.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,created time called,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,initialize every time function declaring called initialize declaration store value element throughout duration program even function called multiple time initialize,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,element initialized zero explicitly initialized happen automatic local array,4.5
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,element initialized zero explicitly initialized non initialized zero,4.5
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,cannot changed,3.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,set size cannot change data may need space assigned could go beyond size,4.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,member prevents naming conflict put global namespace allowing information hiding private public,3.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,local exists duration program element initialized 0 explicitly initialized local element still called later unless specifically initialized something else happen automatic array,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,array size known program whereas non array leave size undeclared open assigned later usually used input purpose,3.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,array keep value end function non reinitialize every time,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,array created initialized value destroyed function terminates program automatic array reset overtime function called,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,created initialized time program call function destroyed every time function end program,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,declare destroyed function created initialized every time function call,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,exists duration program,4.5
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,,3.5
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,exists memory program terminates whereas automatic normal removed function created terminates,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,answered,0.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,constant used declare size automatic array exists duration program initialized declaration first encountered element initialized zero explicitly initialized,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,cannot changed program,3.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,array available throughout program,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,allocated program start freed program exit limited scope allocated freed come scope,5.0
4.4,"What is the difference between an array declared as static, and one that is not?",array declared static live throughout life program initialized function declares array first called,fixed mean change size storage allocated however dynamic array resized,3.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,least 2 depending array used,2.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,,3.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,must except first dimension,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,depends parameter multidimensional multidimensional two,3.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,first dimension required however subsequent dimension needed compiler,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,first,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,must,3.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,first one least,2.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,two parameter column 3,4.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,size first dimension omitted regular however every dimension outside first size must passed example 2 4 6 name multi array would passed multi array 4 6 2,4.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,size subsequent required compiler must know element skip move second element first dimension,4.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,every dimension first,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,,2.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,size first dimension,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,main multidimensional,2.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,except first one compiler need know memory address skip make back 2nd element first dimension size first dimension,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,commonly row column,3.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,least 2 always equal number expecting like blah require 4 input blah require 3 blah require 2,3.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,none pas name,2.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,subsequent first dimension first needed,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,excluding first one,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,first,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,first need size rest stated first like 3,3.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,one le number contains,4.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,answered,0.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,one,2.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,subsequent first one,5.0
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,two,2.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,1 le total number,4.5
4.5,How many dimensions need to be specified when passing a multi-dimensional array as an argument to a function?,dimension except first one,array accessed using 1 index one dimension least,3.5
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,using,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,program compile execute error difficult debug,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,execution,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,compiler complain variable referring never declared,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,runtime,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,answered,0.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,1.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,cause either give give value actual location memory causing logic,5.0
4.6,Using an index outside the bounds of the array generates an error.  Is this a compilation error or a run-time error?,run time error,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,usually followed column programmer determine value,2.5
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,multi,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,two array row column matrix first index indicates row second indicates column mean array element accessed order actually right index change faster left,4.5
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,n row column,4.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,column,1.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,1.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,row,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,x row column x since length row needed passing array function lead believe time,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,seperate section,2.5
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,4.5
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,row column,2.5
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,,5.0
4.7,"How are bi-dimensional arrays stored in memory, by rows or by columns?",row,answer,1.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,take element array compare next element depending value two element switch program compare new switched element next array,3.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,divide list sorted unsorted region take item unsorted region insert correct order sorted region,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,sorted array list built entry time,3.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,start second element check see le element left insert corrected position,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,compare two number time swap entire list sorted,2.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,assume first number sorted move list insert number come across corresponding place sorted side list,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,k iteration first k item array sorted take k + 1 item insert correct position already sorted k element,4.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,looking 2nd element move forward place element correct spot,4.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,starting beginning array take element order place correct position relative previously sorted element,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,element array removing element input data inserting correct position,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,remove element data insert correct position already sorted list,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,take number choose pivot point insert number correct position pivot point,3.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,marker everything left value every new value moving right,3.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,behind take random variable right insert order left,4.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,progress list element determines next element inserted already sorted array starting sorting using first two element,4.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,go list picking integer putting desired position continuing,4.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,inserting array item appropriate position smallest largest pivot start second element array,3.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,insert item proper position shifting larger sorted array value right,3.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,comparison sorted array built entry time,4.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,algorithm first element array sorted list pick taken unsorted array sorted array,4.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,every iteration take away element input data inserting right position sorted list,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,creates new array insert item place respect new array,4.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,take entity unsorted array order sort correct position entity sorted,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,take second element swap 1st le keep larger go third element insert right place respect first 2 element,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,starting first element array following element put place determining smaller larger starting element,4.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,item taken placed correct place sorted portion array item,4.5
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,take element insert correct position respect element,5.0
5.1,"In one sentence, what is the main idea implemented by insertion sort?",taking one array element time left right insert right position among already sorted element left,simple sorting algorithm comparison sorted array list built entry time,4.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,search array largest smallest element moved front array search next largest smallest element move front,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,search whole array largest item put end array search second largest item put second last spot,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find minimum value swap value first position,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find minimum element array swap first element repeat step swapping minimum element nth position array,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find lowest value place front find next lowest place front last value etc,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,cycle unsorted list place minimum next slot sorted list repeat,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find minimum value list swap first element list find second largest swap second element array continue like array sorted,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find smallest put current position till get end,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find lowest unsorted value array place current position starting first element array advance current position,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,element comparing two element swapping smaller element array,3.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find minimum value list swap first value list repeat throughout list,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,select minimum number array put current position move,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find lowest value place front list swap value continue moving right,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,behind take least variable right put directly left,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find smallest value list make first element find smallest value leftover list make first element leftover list continue list sorted,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,run find lowest highest value put desired position,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,place smallest item list position 1 proceeds value last position ray reached,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,search largest item array swap last unsorted item,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find smallest element place 1st position process repeated rest array,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,algorithm selects large item array put place select next largest array sorted,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,select smallest number list move front list advance next number,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,chooses largest smallest value unsorted list creates new list using depending sorted,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find smallest number left unsorted array put end sorted,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,selects minimum remaining element array places minimum current position move next position,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,put biggest element end list place next highest element behind,3.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find largest item place end next largest found placed next last continue number left beginning sorted array,4.5
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,loop entire list iteration find smallest element move current position,5.0
5.2,"In one sentence, what is the main idea implemented by selection sort?",taking one array element time left right identifies minimum remaining element swap current element,find minimum value list swap value first position repeat step remainder list starting second position,5.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,run time sorting program n ^ 2 list already sorted worst list sorted reverse,3.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n performs n 1 list array already sorted,4.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,insertion n n 1 2 sorted list run n,3.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,would n n 1 take scan array make one swap array would sorted would take 1 operation,4.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,1 worst n,2.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n n element array element already sorted,5.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n,3.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,element sorted n 1,4.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,element array already sorted cause loop iterate x time x element array loop never iterate resulting require x,5.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,1 operation already sorted one comparison,3.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n n item,4.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n 1,3.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n list already sorted,4.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,take n 1 array reverse order,4.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,already sorted list progress list directly proportional element list also noted n big notation,5.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,1 list two in ts one must moved,2.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n worst n factorial,3.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n 1 array already sorted,4.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,worst = n time = n ^ 2 time,3.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n,3.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n time n equal element list element list already sorted,5.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,list already sorted would element,5.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,make zero length 1 comparison array given already order,3.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,theta n scenario everything already sorted,4.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,n number increasing order,5.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,could considered one item would easiest could also trivial result nothing moved two item allows algorithm item correct order,2.5
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,look list go list make change list already sorted,4.0
5.3,"What is the number of operations for insertion sort under a best-case scenario, and what is the best-case scenario?",n length array operation achieved sorted array,simplistic move one element list one inserting correct position new slot starting 0 1,2.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 2,one number one number sorted list regardless number,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 3,sequence passed le 2 element,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 4,one,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 5,best worst n log n,2.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 6,one object split array,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 7,length current array 1,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 8,log n,2.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 9,best one element one element sorted,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 10,array sorted 0 1 element,4.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 11,n = 0 n lt 2,4.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 12,list size 1 already sorted,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 13,single element array,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 14,log n,2.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 15,n log n,2.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 16,list array 1 element,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 17,must,3.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 18,single element array,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 19,one element sub array,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 20,array length le equal 1 array returned array merged together,4.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 21,right gt left mid = right + left 2 number temp left mid number temp mid + 1 right number temp left mid + 1 right,2.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 22,sequence number zero one element,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 23,one element array,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 24,array length 1,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 25,array one element,5.0
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 26,one element array starting element array ending element,4.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 27,half original array nothing else put half back together,2.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 28,size list sent lt 1,4.5
5.4,What is the base case for a recursive implementation of merge sort?,size array sorted 1 29,n log n,2.0
6.1,What is a pointer?,variable contains address memory another variable,location memory contains memory address another location memory contains information,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable contains memory address value,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable store address another variable,5.0
6.1,What is a pointer?,variable contains address memory another variable,pointer variable contain value memory address variable,5.0
6.1,What is a pointer?,variable contains address memory another variable,data type whose value refers another value stored elsewhere computer memory using address,4.5
6.1,What is a pointer?,variable contains address memory another variable,hold memory location,4.5
6.1,What is a pointer?,variable contains address memory another variable,name represents actual location value data type int bptr point integer value,4.5
6.1,What is a pointer?,variable contains address memory another variable,variable store address another variable,5.0
6.1,What is a pointer?,variable contains address memory another variable,programming language data type whose value refers directly point another value stored elsewhere computer memory using address,5.0
6.1,What is a pointer?,variable contains address memory another variable,data type whose value refers another value stored somewhere else computer memory using address,5.0
6.1,What is a pointer?,variable contains address memory another variable,like variable however instead holding data hold location memory,4.5
6.1,What is a pointer?,variable contains address memory another variable,reference location memory,5.0
6.1,What is a pointer?,variable contains address memory another variable,reference memory location object,4.5
6.1,What is a pointer?,variable contains address memory another variable,variable contains memory address variable value,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable contains value memory address associated moved along string array jumping one memory address,3.5
6.1,What is a pointer?,variable contains address memory another variable,contains variable memory address value,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable point memory address another variable type specific,5.0
6.1,What is a pointer?,variable contains address memory another variable,element reference memory cell,5.0
6.1,What is a pointer?,variable contains address memory another variable,reference call place memory object stored,4.0
6.1,What is a pointer?,variable contains address memory another variable,variable contains address another variable,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable contains number memory address value may null 0 address value stored memory,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable contains memory address anther variable,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable contains memory address another variable contains specific value,5.0
6.1,What is a pointer?,variable contains address memory another variable,variable memory address value,4.5
6.1,What is a pointer?,variable contains address memory another variable,type point something else memory address something else,4.5
6.1,What is a pointer?,variable contains address memory another variable,way get another object essentially way grab instance object either pas instance message retrieve data object actually address instance held memory,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return place memory element,4.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,data stored b b,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,return variable,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,ampersand mean pas reference function called pointer variable instead variable passed function,3.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,variable memory,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return location memory item,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory variable precedes,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,memory operand something along line,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,object memory,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,reference variable,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return number specified variable,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,return memory operand applied normal variable give variable memory pointer variable might,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,unary return memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,variable attached,4.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,memory operand,5.0
6.2,What does the address  ADDRESS  operator return?,memory address operand,return put front,4.5
6.2,What does the address  ADDRESS  operator return?,memory address operand,return pointer,3.5
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return synonym object pointer operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return synonym object pointer operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return synonym object operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return synonym alias nickname name object operand point memory dereferencing pointer,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return alias nickname object pointer operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return value memory address element point,4.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return value,4.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return dereferencing pointer variable ie return value whatever variable pointer pointing,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,dereferencing return dereferencing object,4.5
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return synonym object operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return information address pointer point,4.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return value memory address pointer pointing,4.5
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return object memory location,4.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return value object memory address precedes,3.5
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,value object operand point,4.5
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,value stored object pointed,4.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,value variable pointer point,4.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return synonym object operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,synonym object operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return synonym object operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,dereferencing pointer meaning return value stored memory address pointer refers,4.5
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,unary return value variable located address,4.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,reference = variable,2.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,synonym object pointer operand point,5.0
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,return actual data address pointed,3.5
6.3,What does the star  STAR  operator return?,alias synonym name object operand point memory dereferencing operator,zero many character placed,2.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,signed element assigned,3.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,setting variable equal variable name element accessed adding value variable,4.5
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,element b n accessed bptr + n,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,using either name using separate point,3.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,element b 3 referenced using bptr + 3 instead,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,get memory location first element add get element,5.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,yes +,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,name considered c passed function parameter declaring int 10 creates store address 0,3.5
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,element b n accessed bptr + n example,4.5
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,+ element,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,f 3,2.5
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,front add memory location initial value,5.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,initially point first element incremented point next element,3.5
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,int x 10 int xptr xptr = x address x 1 xptr + 1,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,take number element point time,2.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,act referenced array ptr + 3 + 3,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,using + element index,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,using star operator b n accessed pointer + n,4.5
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,element n accessed aptr + n,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,referencing referring pointer relative first + 1 + 2 etc,3.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,first variable must reference first entity variable accessed referring first entity address plus e ptr to array = nth entity = ptr to array + n,5.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,b3 bptr + 3 treated,3.5
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,= +,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,b 3 bptr + 3,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,array name + index,4.0
6.4,How can an array be addressed in pointer or offset notation?,initializing pointer point first element array incrementing pointer index array element,multi dimensional,1.0
6.5,What does the sizeof operator return?,size byte operand,number byte array program compilation,4.5
6.5,What does the sizeof operator return?,size byte operand,return size operand,4.0
6.5,What does the sizeof operator return?,size byte operand,return size operand byte,5.0
6.5,What does the sizeof operator return?,size byte operand,return size array byte,4.5
6.5,What does the sizeof operator return?,size byte operand,return size array byte program compilation,4.5
6.5,What does the sizeof operator return?,size byte operand,return size argument passed,4.0
6.5,What does the sizeof operator return?,size byte operand,byte size date stored ina variable,4.5
6.5,What does the sizeof operator return?,size byte operand,return size operand byte,5.0
6.5,What does the sizeof operator return?,size byte operand,amount memory required specific parameter in ts double,3.5
6.5,What does the sizeof operator return?,size byte operand,return size operand byte,5.0
6.5,What does the sizeof operator return?,size byte operand,size information bit,2.5
6.5,What does the sizeof operator return?,size byte operand,size string,3.0
6.5,What does the sizeof operator return?,size byte operand,return size byte respective object,4.5
6.5,What does the sizeof operator return?,size byte operand,return total number byte operand,5.0
6.5,What does the sizeof operator return?,size byte operand,size operand byte used variable name type name constant value,5.0
6.5,What does the sizeof operator return?,size byte operand,size byte needed store object memory,4.5
6.5,What does the sizeof operator return?,size byte operand,size list object,3.0
6.5,What does the sizeof operator return?,size byte operand,return size byte array parameter,4.0
6.5,What does the sizeof operator return?,size byte operand,size operand byte,5.0
6.5,What does the sizeof operator return?,size byte operand,return size byte specified data,4.5
6.5,What does the sizeof operator return?,size byte operand,return size operand memory checked compiler time,4.0
6.5,What does the sizeof operator return?,size byte operand,size operand byte,5.0
6.5,What does the sizeof operator return?,size byte operand,total number byte object,4.5
6.5,What does the sizeof operator return?,size byte operand,total number byte array,4.5
6.5,What does the sizeof operator return?,size byte operand,return size byte certain variable type,4.5
6.5,What does the sizeof operator return?,size byte operand,yield size byte operand expression parenthesized name type,4.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,passed value reference,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconstant nonconstant data nonconstant constant data constant nonconstant data constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconstant nonconstant data nonconstant constant data constant nonconstant data constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,four nonconstant nonconstant data nonconstant constant data constant nonconstant data constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,value reference,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,reference,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,address bptr directly bptr,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconstant nonconstant data constant nonconstant data nonconstant constant data constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,argument reference,2.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconstant nonconstant data nonconstant constant data constant nonconstant data constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,value reference reference argument,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,memory address,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconst gt nonconst const gt nonconst nonconst gt const const gt const,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconstant nonconstant data constant nonconstant data nonconstant constant data constant point constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,non constant non constant data non constant constant data constant constant data constant non constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,reference reference argument int reference argument int,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,reference dereferencing,2.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,1 nonconstant nonconstant data declaration include const qualifier 2 nonconstant constant data provides performance reference protection value 3 constant nonconstant data 4 constant constant date,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,constant constant data constant nonconstant data nonconstant constant data nonconstant nonconstant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconstant nonconstant data nonconstant constant data constant nonconstant data constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,pointer may passed function value reference reference argument reference argument,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,four way 1 non constant non constant data 2 non constant constant data 3 constant non constant data 4 constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,nonconstant nonconstant data nonconstant constant data constant nonconstant data constant constant data,5.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,value reference reference argument reference argument,2.5
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,either cant moved data pointed cant changed neither,4.0
6.6,What are the different ways to pass a pointer to a function?,four way nonconstant pointer constant data nonconstant pointer nonconstant data constant pointer constant data constant pointer nonconstant data,two something value reference use dot operator within receiving use operator inside passing,2.5
6.7,What is a function pointer?,address location memory function code resides,point memory address beginning part function pretty much point called execute,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address memory,5.0
6.7,What is a function pointer?,address location memory function code resides,pointer pointer e variable point address,5.0
6.7,What is a function pointer?,address location memory function code resides,address code resides passed function returned function stored array assigned pointer,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address memory,5.0
6.7,What is a function pointer?,address location memory function code resides,dereferencing call zero argument,3.5
6.7,What is a function pointer?,address location memory function code resides,,3.5
6.7,What is a function pointer?,address location memory function code resides,contains address used call,5.0
6.7,What is a function pointer?,address location memory function code resides,pointer pointer e variable point address,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address,5.0
6.7,What is a function pointer?,address location memory function code resides,used substitution calling,5.0
6.7,What is a function pointer?,address location memory function code resides,point memory address kind like breaking branch tree object hitting object,5.0
6.7,What is a function pointer?,address location memory function code resides,pointer contain address function passed returned function well stored array assigned pointer,5.0
6.7,What is a function pointer?,address location memory function code resides,variable point address,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address memory,5.0
6.7,What is a function pointer?,address location memory function code resides,point allows passing parameter another,4.0
6.7,What is a function pointer?,address location memory function code resides,pointer contain address function,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address definition,4.5
6.7,What is a function pointer?,address location memory function code resides,contains memory address using passed returned another pointer also stored array,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address function,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address memory,5.0
6.7,What is a function pointer?,address location memory function code resides,contains address memory,5.0
6.7,What is a function pointer?,address location memory function code resides,point address,5.0
6.7,What is a function pointer?,address location memory function code resides,dereferencing invokes passing zero argument like normal programming language like c pointer used simplify code replacing large switch statement,4.0
7.1,What is a linked list?,collection element allocated dynamically,consists sequence node containing number data field one two link called pointer point next previous node,4.5
7.1,What is a linked list?,collection element allocated dynamically,item point next item,4.5
7.1,What is a linked list?,collection element allocated dynamically,chain structs record called node ability add delete retrieve item,4.5
7.1,What is a linked list?,collection element allocated dynamically,element node one another element point next element,4.5
7.1,What is a linked list?,collection element allocated dynamically,sequence node containing data field specified programmer pointer point next previous node,4.5
7.1,What is a linked list?,collection element allocated dynamically,node node contains data member also pointer next node,4.5
7.1,What is a linked list?,collection element allocated dynamically,item together item successor,4.5
7.1,What is a linked list?,collection element allocated dynamically,chain node store single piece data pointer variable point node,4.5
7.1,What is a linked list?,collection element allocated dynamically,one fundamental data structure used implement data structure consists sequence node containing arbitrary data field one two reference link pointing next previous node,4.5
7.1,What is a linked list?,collection element allocated dynamically,data structure sequence node containing arbitrary data field one two reference link pointing next previous node,4.5
7.1,What is a linked list?,collection element allocated dynamically,information memory next piece information forward backwards,3.5
7.1,What is a linked list?,collection element allocated dynamically,data structure necessarily contiguous memory space array hold data type point next data item doubly also previous item,5.0
7.1,What is a linked list?,collection element allocated dynamically,data structure containing one data element pointer next node,4.5
7.1,What is a linked list?,collection element allocated dynamically,series node structure value pointer point similar node quite array still carry value,4.5
7.1,What is a linked list?,collection element allocated dynamically,data type contains pointer least next element,4.5
7.1,What is a linked list?,collection element allocated dynamically,component contains node data item pointer next item,4.5
7.1,What is a linked list?,collection element allocated dynamically,chain structs record called node node least two member one point next item node,4.5
7.1,What is a linked list?,collection element allocated dynamically,array based us implicit ordering scheme often using pointer,2.5
7.1,What is a linked list?,collection element allocated dynamically,series structure containing data item pointer link structure next structure,4.5
7.1,What is a linked list?,collection element allocated dynamically,collection object containing least one data member pointer next object previous object case doubly,4.5
7.1,What is a linked list?,collection element allocated dynamically,link data structure built structure pointer form chain node pointer representing link chain holding entire thing together,4.0
7.1,What is a linked list?,collection element allocated dynamically,pointer 2 every pointer point next pointer next element,4.5
7.1,What is a linked list?,collection element allocated dynamically,linear collection self referential node connected pointer,4.0
7.1,What is a linked list?,collection element allocated dynamically,item data structure using pointer,4.5
7.1,What is a linked list?,collection element allocated dynamically,object object contains link next item,4.5
7.1,What is a linked list?,collection element allocated dynamically,one fundamental data structure used implement data structure consists sequence node containing arbitrary data field one two reference link pointing next previous node,4.5
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,element inserted link list point need resized unlike array need,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,unlike insert delete without shifting data change size easily,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,array size fixed fixed,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,insert delete item pointer based list without shifting data,4.5
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,must defined size element added list w defining size,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,principal benefit list conventional array order item may different order data item stored memory disk allowing list item traversed different order list self referential data type contains pointer link another datum type permit insertion removal node point list constant time,4.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,expand need predetermine size,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,able grow shrink size needed,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,list able grow size needed require shifting item insertion deletion,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,list fixed size require shifting item insertion deletion,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,limit many create array hold given amount information,3.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,constant time insertion deletion,3.5
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,grown dynamically item require shifting greater awesome factor,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,indefinite size added taken away easily little difficulty shifting data,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,nearly infinite size limited system memory also ability expand size dynamically,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,grow needed fixed size,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,fixed size list able grow needed time access array base list take constraint amount time base like depends,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,grow shrink need fixed size,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,memory allocated fly item,4.5
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,list may increased size needed array size set created,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,array fixed size list able grow size needed,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,sizeable,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,set size grow shrink needed,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,abe grow needed new size,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,size fixed easier sorting shifting easier insert item list,5.0
7.2,What is the main advantage of linked lists over arrays?,linked list variable length,size array restricted declaration insertion deletion value middle array possible,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,array retrieve memory place list link list traverse individual node,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,require le memory allow direct access specified item also insertion deletion require list traversal,4.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,access particular element fast location memory determined mathematically accessed directly,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,good random access good sequential access constant time linear random access faster case,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,array capable accessing part array based index link list must traversed beginning end data accessed adjacent previous next node,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,hand allow random access allow sequential access element singly fact traversed one direction,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,keep head list,2.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,easier implement require le memory,3.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,list increase complexity implementation list array keep growing lead increase memory,2.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,iterate entire list access element,4.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,go forward backwards point piece data given time point next piece data,3.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,take le memory continuously stored,4.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,fixed le error prone,2.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,set list value meaning pick spot array 7 pick 8th spot array keep track pointer want take specific node otherwise must traverse entire list,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,direct access element speed increased search time access element even list sorted like getting last element without pointer directly end list,4.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,array item accessed directly equal access time,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,array base implementation require le memory pointer base one,3.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,access specific element quickly array list must traverse list get access element,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,link allow sequential access allow random access,4.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,entity array may accessed immediately whereas list must traversed one item time object point adjacent object,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,array based implementation requires le memory lined based implementation,3.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,array based implementation require le memory pointer based one,3.5
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,go array go one direction traversing list,3.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,allow random access item contained time must gone toget desired item,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,direct access element traverse list element need,5.0
7.3,What is the main advantage of arrays over linked lists?,element array accessed directly opposed linked list require iterative traversal,array size fixed fixed data also accessed quicker array list also memory requirement le pointer required random access le overhead compared list sequential access much overhead cache memory support hand allow random access allow sequential access element singly fact traversed one direction,5.0
7.4,How are linked lists passed as arguments to a function?,reference,reference want change pointer,4.5
7.4,How are linked lists passed as arguments to a function?,reference,passing head pointer list reference,5.0
7.4,How are linked lists passed as arguments to a function?,reference,access list head pointer access entire list pas head pointer reference argument,5.0
7.4,How are linked lists passed as arguments to a function?,reference,using node,2.5
7.4,How are linked lists passed as arguments to a function?,reference,pas reference,5.0
7.4,How are linked lists passed as arguments to a function?,reference,send pointer object linked list class,2.5
7.4,How are linked lists passed as arguments to a function?,reference,pointer head,4.0
7.4,How are linked lists passed as arguments to a function?,reference,passing head pointer list give access node list,4.5
7.4,How are linked lists passed as arguments to a function?,reference,pas head pointer since access entire list,4.0
7.4,How are linked lists passed as arguments to a function?,reference,pas head pointer reference argument,5.0
7.4,How are linked lists passed as arguments to a function?,reference,answered,0.0
7.4,How are linked lists passed as arguments to a function?,reference,pass pointer list object,2.5
7.4,How are linked lists passed as arguments to a function?,reference,list object contains head element accessible,3.5
7.4,How are linked lists passed as arguments to a function?,reference,head list take head address traverse,4.0
7.4,How are linked lists passed as arguments to a function?,reference,pointer node,3.0
7.4,How are linked lists passed as arguments to a function?,reference,method access list head pointer access entire list,4.0
7.4,How are linked lists passed as arguments to a function?,reference,access list head pointer access entire list pas head pointer reference argument,5.0
7.4,How are linked lists passed as arguments to a function?,reference,head pointer reference argument,5.0
7.4,How are linked lists passed as arguments to a function?,reference,pointer first element,4.0
7.4,How are linked lists passed as arguments to a function?,reference,reference specific head pointer,5.0
7.4,How are linked lists passed as arguments to a function?,reference,pas head pointer reference argument,5.0
7.4,How are linked lists passed as arguments to a function?,reference,reference,5.0
7.4,How are linked lists passed as arguments to a function?,reference,passing head pointer going list needed inside,4.0
7.4,How are linked lists passed as arguments to a function?,reference,using pointer,3.0
7.4,How are linked lists passed as arguments to a function?,reference,head object,3.5
7.4,How are linked lists passed as arguments to a function?,reference,permit insertion removal node point list constant time 1 allow random access,1.5
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,passed reference want function change pointer,0.5
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,every node successor mean last node successor head first node,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,link item continuous circle allows full traversed starting item fixed head tail required,4.5
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last node point first node,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,end element point head thus making circle link nothing pointing head last element point null,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last node point begining standard point null,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last item point head,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last node point back first node null,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,list useful describing naturally structure advantage regular structure able traverse starting point,2.5
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last node point back head,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,point null end point head end,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last item point first item,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,tail point head whereas tail point null,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,end null value pointer end beginning,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,determine end list last element link null pointer list link head element end,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,node contains null last node point pack node within,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last node reference first node every node successor node contains null,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,node contains null,3.5
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last element point head,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,regular last object point null last object point back beginning,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,node successor node contains null last node contain null,3.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,list last element point first,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last element instead last item point head,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last node contains pointer go back first node last node contains null pointer,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,last object back first object,5.0
7.5,What is the difference between a circular linked list and a basic linked list?,last element circular linked list point head list,case non link last node u want move first u need go one step back till u reach first link last first need make one move single link u move one direction double link u move direction back forward forward,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,traverse direction,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,delete node without traverse,4.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,allows delete node without traversing establish trailing pointer,4.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,allows traverse either direction node point successor well predecessor,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,list traverse backwards though still cannot access data point shorter traverse backwards,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,traverse front back back front,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,traverse reverse,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,list traversed direction,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,double list require space per node elementary operation expensive often easier manipulate allow sequential access direction,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,traverse forward backwards node,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,point forward backwards,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,go backwards access previous data easier without keep track previous item,4.0
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,list allow backward movement node,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,double pointer node point forward backwards making little easier get need,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,ability backtrack,3.0
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,move forward backwards double move forward,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,node point both predecessor successor special case insertion deletion,4.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,node point predecessor successor,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,pointer direction allows access back front well front back,4.0
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,traversed either direction normal traversed start finish,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,double often easier manipulate allow sequential access direction,4.0
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,given node one navigate easily either direction,4.0
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,traverse forward backwards,3.5
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,allows back node rather go entire,4.0
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,give faster time operation insertion deletion,5.0
7.6,What is the main advantage of a doubly-linked list over a basic linked list?,deletion insertion operation performed constant time including operation performed given location list end list,primary disadvantage list 1 node requires extra pointer requiring space 2 insertion deletion node take bit longer pointer operation,2.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,take twice much memory node,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,pointer set mechanic inserting deleting difficult also special case beginning end complicated,3.5
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,pointer set mechanic inserting deleting bit involved singly,4.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,insertion deletion involved singly leaving room error complex algorithm,3.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,need memory store previous pointer,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,node take memory node singly,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,keep consider predecessor successor connection inserting deleting,3.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,node requires extra node requires memory difficult insert remove individual node,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,double list require space per node elementary operation expensive,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,difficult delete create node,3.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,use memory make 2 pointer update 2 pointer time change,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,node take memory,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,node requires extra pointer space requirement increased insertion deletion node take longer pointer operation,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,little confusing special case end beginning become difficult,3.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,increased action add remove element,3.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,inserting deleting double involved special case beginning end,3.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,disadvantage hard remove item,2.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,node requires extra pointer taking storage insertion deletion require pointer operation,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,twice many pointer element therefore memory used,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,process adding removing node complex,3.5
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,double list require space per node elementary operation expensive,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,1 node requires extra pointer requiring space 2 insertion deletion node take bit longer pointer operation,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,take twice storage needed,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,using pointer enable backward movement take memory pointer make slightly work add remove node,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,increased memory requirement slightly complicated modifying element,5.0
7.7,What is the main disadvantage of a doubly-linked list over a basic linked list?,extra space required store back pointer,answered,0.0
8.1,What is a stack?,data structure store element property last item added first removed last first,data structure storing item accessed last first order implemented three way,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,abstract data type based principle last element inserted first element removed,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,store set element particular order,2.0
8.1,What is a stack?,data structure store element property last item added first removed last first,at whose recently inserted item first item removed retrieved property called last first lifo item enter leave top,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,list top last item added modified,4.5
8.1,What is a stack?,data structure store element property last item added first removed last first,data structure us push insert item pop remove ad item use last first structure inserting removing item,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,data structure store data using lifo,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,similar array allow random access stack allow user retrieve last item put last fist,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,store set element particular order principle last first mean last element inserted first one removed,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,at store set element particular order,2.5
8.1,What is a stack?,data structure store element property last item added first removed last first,data type store set element certain order last first,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,data structure move element last first,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,store set element last first order,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,list added removed top,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,abstract data type operates last first basis storing list object support least pure peeking element without removing rest first,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,store set element particular order based principle last first lifo,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,object list store element particular order first object inserted bottom last object top first object last object,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,at store set element particular order principle lifo last item inserted list first,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,abstract data type store set element particular order,2.5
8.1,What is a stack?,data structure store element property last item added first removed last first,collection data executed order last first,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,data structure allows data member added removed one time order last first structure,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,store set element particular order,2.0
8.1,What is a stack?,data structure store element property last item added first removed last first,list element first one removed last one inserted,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,data structure put element list allows user access last element,4.5
8.1,What is a stack?,data structure store element property last item added first removed last first,finite ordered list zero element,2.0
8.1,What is a stack?,data structure store element property last item added first removed last first,storage container hold object certain order lifo priority,5.0
8.1,What is a stack?,data structure store element property last item added first removed last first,stack type container adaptor specifically designed operate lifo context last first element inserted extracted end container,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,push insert element top pop remove last inserted element,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,pop function push function,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,push insert item pop remove item,5.0
8.2,What are the two main functions defined by a stack?,push pop,adding new item removing item,5.0
8.2,What are the two main functions defined by a stack?,push pop,push insert pop retrieve,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,pop push,5.0
8.2,What are the two main functions defined by a stack?,push pop,push add element pop remove element,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,pop push,5.0
8.2,What are the two main functions defined by a stack?,push pop,push add item pop pull last item added array,5.0
8.2,What are the two main functions defined by a stack?,push pop,pop push,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop push put object list pop take last object,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,push add element pop take element,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop add remove data respectively,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop,5.0
8.2,What are the two main functions defined by a stack?,push pop,pop remove item push insert element,5.0
8.2,What are the two main functions defined by a stack?,push pop,pop push,5.0
8.2,What are the two main functions defined by a stack?,push pop,pop push,5.0
8.2,What are the two main functions defined by a stack?,push pop,push add item top pop remove top item,5.0
8.2,What are the two main functions defined by a stack?,push pop,push pop push add given node top leaving previous node pop remove return current top node,5.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,fixed size add delete element end use pointer keep track last element added time add delete element update pointer check equal max size,5.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,implementing pre defined size bottom element stored element 0 last element stored top increment top element pushed decrement item popped,5.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,use dynamically allocated must provide destructor copy constructor,3.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,create int value store head increment top one element pushed decrement popped,5.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,use pointer always point end list push pop modification,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,used add element add end remove item end also,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,predetermine size would type grow,2.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,declare variable point last item increase item pushed onto decrease item popped top,5.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,allocate size bottom element stored element last index top increment top one element pushed decrement pop,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,allocate pre defined bottom element stored element 0 last index head,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,make make bottom spot 0 make last spot top increment top ad,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,treat beginning beginning,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,use index value called top keep track last element,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,create pointer point next list item,2.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,efficiency easiest left right method right item one retrieved pop performed push place object furthest element,3.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,create based pre defined size n element n bottom element stored element 0 last index top increment top one element pushed decrement pop,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,element added last element added end element popped take last element,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,allocate pre defined size bottom element stored element 0 last index top increment top one element pushed,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,create size n n one element pushed n one element popped,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,define keep track pointer last element item added,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,allocating predetermined size integer track top element bottom member go element 0 element pushed top tracking integer incremented,4.5
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,allocate size bottom element stored element 0,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,store keep mind first element,3.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,keep track last item entered allow user access part,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,using array pushing one int time get end,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,max number element allocating number element storing element starting 0 keeping track many element currently list,4.0
8.3,How can you implement a stack with an array?,keep top stack toward end array push pop operation add remove element right side array,usually hold bunch item type therefore u use hold content integer top hold index element top u choose size sequence operation used u decide data type needed data structure,3.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,add element end linked update pointer called top time modify,3.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,head pointer point element recently pushed onto pop function change head pointer point next last element remove element head pointer previously pointed,5.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,implementation using single linked operation performed 1 push function insertion pushing element similar insertion element end single linked see function insert end program operation single linked 2 pop function deletion popping element similar deletion element end single linked see function delete end program operation single linked 3 display function displaying element,4.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,using node keep track head using push pop create needed,4.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,use head top modify head push pop push would add new item head pop would remove item head,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,changing pointer first element new item move pointer top next item removing item,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,dynamically create space grows long need,2.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,declare pointer point head linked add remove node beginning,5.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,creating linked add element top pushing deleting element popping,4.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,singly linked already lot like depends way address moving head,3.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,make make bottom head add end make end top,3.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,use add function beginning remove pop,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,use head top push pop node head,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,create node based point next item,1.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,head last item added push add new head,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,create new pop element needed push remove item unless empty top item head last item end,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,adding element end link element popping element take last element set previous one end,3.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,using array linked use pointer point element node next element use pointer becomes linked,2.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,element inserted removed head header node current pointer,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,use linked keep track pointer point first item,4.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,singly linked already easily used lifo data storage member simply pushed popped first item last,4.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,using pointer,1.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,top first pointer,3.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,keep pointer pointing last element entered front array move pointer back delete element,2.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,using linked pushing node contains int get end linked,2.5
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,linked push add item onto beginning pop remove first element,5.0
8.4,How can you implement a stack with a list?,keep top stack pointing head linked list push pop operation add remove element beginning list,using linked one way handle essentially number element usually convenient put data structure module thus want create file h c,2.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,constrained fix size fall take memory node least two part item pointer,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,stack create limited size increase decrease size needed,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,prevents push operation adding item stack stack size limit size reached base much simpler write fixed size,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,faster easier keep track le complexity code,2.5
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,use fixed size like would,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,usually linked fixed size know want set max size better,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,allows flexibility size stack,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,linked list implementing stack limited set number element,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,since big 1 efficient,3.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,linked way moved along without iteration,3.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,size determined,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,linked take le memory scalable,3.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,grown dynamically head node easily accessible,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,node easier work traversed easier,3.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,lower processing overhead nearly unlimited space due linked design,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,grow shrink dynamically unlike fixed size,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,array become full list grow shrink needed,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,base implementation one main reason fixed size,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,linked requires extra space store pointer space allocated dynamically take time,2.5
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,link make pushing element easier limit memory number element,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,much easier implement allows stack scale necessary therefore,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,requires le memory increasing size sizeable waste storage time,3.5
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,stack would need pre determine size increase decrease size however want,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,flexible,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,would think would better change pointer node add remove thing stack,4.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,much flexible easier use doesnt need max size defined made,5.0
8.5,"Which implementation  array-based vs. list-based  is preferred, and why?",link based dynamic size constraint,hold size long u specify,1.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,converted post fix still follow order precedence operator,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,first converted postfix,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,cannot evaluated must first convert postfix expression evaluate,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,using parenthesis order expression,2.5
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,postfix notation,4.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,usually convert post fix expression evaluate using stack,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,converted postfix,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,interpreted postfix implementing stack,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,first converted equivalent postfix expression read computer,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,computer translates expression postfix expression solves,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,postfix format,4.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,use parenthesis stack determine evaluation need made first,3.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,throwing variable postfix expression operand onto parenthesis regulated stack end parenthesis enough variable operate encountered,4.5
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,passed function leading term,1.5
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,hard time explaining show instead start expression like 5 + 2 5 + 400 2 + 3 push item get happens perform operation reach complete 7 5 + 400 2 + 3 expression perform last step 35 + 400 2 + 3 stack repeat again 35 + 400 5 stack repeat 35 + 80 stack repeat 115 stack returned,2.5
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,expression converted postfix form,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,converting postfix putting operation stack,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,computer convert expression postfix form evaluates postfix expression,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,converted postfix computer operand stay order operator always follow operand,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,pointer reference memory location,1.5
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,convert postfix form evaluation,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,convert postfix expression evaluate postfix expression,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,operand entered computer push onto stack operator entered computer applies top two operand stack pop operand stack push result operation onto stack,4.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,convert expression postfix expression push number onto stack pop needed,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,converted postfix e 3 + 2 changed 32 +,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,transformed post fix stack,5.0
8.6,How are infix expressions evaluated by computers?,first converted postfix form followed evaluation postfix expression,writing arithmetic called notation binary operator like written two operand + b two alternative form notation used certain situation one prefix notation operator written operand prefix notation sum b written + b notation used write function call mathematics computer science also used lisp scheme programming language postfix notation operator written operand sum b written b + may seen reverse polish notation postfix notation form conceptual basis way arithmetic computer one important characteristic postfix prefix notation unambiguous parenthesis needed indicate order operation,5.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,isemptry determines full pop remove top looking search compare data looking,3.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,keep using peek get top see top popping top peek get top provides looking,3.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,push add node top leaving previous node pop remove return current top node,3.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,using linked list stack temp retain value use pop function pop compare looking push temp repeat found pop temp back onto regular complete,5.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop item top looking end empty never found item exist may also necessary save popped value case want recreate,5.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,implemented using array could simply search array item implemented using linked list pop value either value found empty item put back list,4.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop item compare item item found item removed,3.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop one check see desired push onto another finished pop item second push back onto first ensure order element maintained,5.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,basically pop,3.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,iterate checking number current,1.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop push,3.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop element push popped element back,5.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,keep popping node storing alternate found pop push previously popped node back onto,5.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,either traverse entire list pop part create pointer system automatically point,3.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,depends type true haft pop element want push element removed back order removed java style peek function return wanted instead requiring excessive action required true,5.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,top item pop repeat item found empty,3.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,could traverse list array,2.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop operation go throughout,3.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,create stack push empty pop boolean return value,3.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,traverse popping search,3.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop another storage desired found,4.0
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop operation,2.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop element push back,4.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,function keep track element popped function put popped element backing function,4.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,pop compare looking push back lost,4.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,search list element dont really understand question asking clear,1.5
8.7,What operations would you need to perform to find a given element on a stack?,pop element store another stack element found push back element original stack,stack push stack pop stack is empty,3.0
9.1,What is a queue?,data structure store element property last item added last removed first first,data structure c collection data kept order first first,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,list object particular order read one time starting first followed second,4.0
9.1,What is a queue?,data structure store element property last item added last removed first first,abstract data structure operation performed end giving first first behavior,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,store set element particular order principle operation fifo first first mean first element inserted first one removed,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,at whose first inserted item first item removed us fifo idea item enter back leave front,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,last last architecture work way line bank would work person waiting longest get served first,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,data structure store element first first order,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,waiting list item operation fifo first first order,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,similar array except data accessed sequentially rather random unlike stack follows fifo first first,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,particular kind collection entity collection kept order principal operation collection addition entity rear terminal position removal entity front terminal position first first fifo method,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,like linked list first first,4.5
9.1,What is a queue?,data structure store element property last item added last removed first first,fifo data structure,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,first first data structure,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,like stack us linked list stack little differently fifo first thing enqueue first thing dequeue,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,first first abstract data type used store value,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,store set element particular order first first principle,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,object store element order follows first first first element added first one come,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,queue list store set element particular order stack principle case first first first element inserted first element removed,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,finite ordered list zero element based upon first first,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,data structure performs operation order first first fifo,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,first first data structure first element added also first removed,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,buffer store element particular order,3.5
9.1,What is a queue?,data structure store element property last item added last removed first first,store set element first element first element removed,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,data structure remove node head add node tail,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,list thing follows first first behavior,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,storage container hold object first first priority,5.0
9.1,What is a queue?,data structure store element property last item added last removed first first,another data structure physical analogy line bank go bank customer go rear end line customer come line e serviced front line,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue add data dequeue deletes data,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue insert specified element head specified dequeue remove specified element,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue insert item back dequeue remove item front,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue insert dequeue remove element,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,remove item added first add item back,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue data dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue add item dequeue take first item,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue add remove element,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,dequeue enqueue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,enqueue dequeue,5.0
9.2,What are the two main functions defined by a queue?,enqueue dequeue,rear front,2.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,make use front pointer tail pointer tail pointer reach end get reset front two pointer equal either full one element,4.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,create max size adjust item make follow fifo procedure,3.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,implementing adding item end removing item beginning,3.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,application fixed sized present problem use represent,2.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,keep track front back increase decrease element inside,4.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,declare size special conditional statement pointer make sure use say 20 element load 18 dequeue 3 enqueue 4 element want loop back index 0 continue process save resource,4.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,could use first element list remove point insert end f would shift element time remove item unless make circular,4.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,utilizing index front back front 0 add item back index incremented,4.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,declare two variable front rear used denote element accessed increment rear whenever data enqueue end increment front whenever data dequeue,4.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,fixed size maximum n element,2.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,make size add front delete back keep track two know full add subtract,4.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,using beginning removal point beginning ith element end,3.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,add data first element last take data first element last,3.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,take put stack traverse list keep track top bottom,3.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,create fixed size 2 integer point beginning end que special case know que empty full,4.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,keep track front rear index either 1 dequeue item shifting left 2 use wrapped configuration,4.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,add item fixed size pull item calling starting index increase starting index call next index element,3.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,use element item 0 top element every time element inserted item pushed back one space top element always removed first,3.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,fixed size max n element need keep track front rear,4.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,keeping track front item rear item circular us modulo function,5.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,using size allocated limit size based class must keep track front back may need wrap around,5.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,pointer based implementation could use linear linked list two external pointer one front one back,2.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,remove element shift element one space back,3.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,head pointer point first least current data entered tail point current data entered method must created tail pointer leave,5.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,type fixed length,1.5
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,storage class keep track index first last item wrap around end full,5.0
9.3,How can you implement a queue with an array?,use circular array keep rear queue toward end array front toward beginning allow rear pointer wrap around,boolean isfullq rear max size 1,5.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,unlimited element push node onto end pop one front,5.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,theoretically could two way one us processing power memory larger ever full us almost infinite memory practical method would two place item array remove item position one array shift array add another element required option use infinite memory used long term queue job scheduling go nonstop extended period array add item read item one raise counter value two ecetera continue adding element array downside method use element one still memory im crazy know,2.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,implementing tail pointer point item recently inserted onto back head pointer point item least recently inserted onto also item removed front added back,5.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,use represent item,1.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,pointer last element use enqueue insert item link first last element together dequeue,3.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,enqueue end linked dequeue item beginning head,5.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,use first element remove point insert item end,5.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,utilizing front pointer back pointer front pointer back pointer point first item add item front remains back pointer next point new item new item assigned become new back pointer,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,linked allows node added tail retrieved head,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,check empty add element,2.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,make linked add front delete back keep track,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,making head beginning last listed item insertion point,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,throw data head take tail,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,create node head top pointer function basically substituting pop push enqueue dequeue,3.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,fairly easy singly linked pointer head tail hte dequeue first item que create temp pointer next element delete head make head temporary pointer enqueue new item use pointer end add new item next item tail make tail next item current tail,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,use linked 2 pointer one front one back long back front empty,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,create node input data continue add dequeue get first element data set next element new first element,4.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,linked stack principle top element element always removed first must use node contain element pointer top element also could called head pointer,3.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,linked checking front rear keep enqueue element front equal rear 1,3.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,implemented keeping track two pointer head tail,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,element allocated node linked new element added head dequeue element coming tail,5.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,operation dequeue operation remove 1 operation get front queue front operation retrieve 1 queue front,4.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,remove first element reference second element new head,3.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,creating adding node end removing node beginning,5.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,would add back pointer program know end,4.0
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,storage class enqueue add item end dequeue return first item,4.5
9.4,How can you implement a queue with a list?,keep rear queue pointing tail linked list enqueue operation done end list keep front queue pointing head linked list dequeue operation done beginning list,temp gt next = null front rear gt next = temp else front = temp rear = temp,3.5
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,run time order n also limited size like,4.5
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,linked store item linearly memory instead individual block,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,size restriction,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,would slightly complicated would need keep track front rear,3.5
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,queue way complicate thing extent,3.5
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,le code size limitation declaration mean also efficient versatile,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,prefered set size insertion deletion done quickly keep pointer first element last,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,space issue due rightward drift fix rightward drift requires constant shifting data,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,similar stack linked list preferable queue size adjusted,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,keep track count,1.5
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,size defined,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,enqueue dequeue depending upon would need shift element another space causing horrid time complexity large data set modify pointer constant time complexity,4.5
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,best list especially tail kept track dynamically grown without losing track head tail,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,much simpler run time better,4.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,lessened memory usage initially increased limit large que become,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,fixed size,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,dynamic size need declared,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,base implementation best use pointer keep track front back pointer easier maintain us memory,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,dynamically grow fewer restriction,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,memory allocation issue,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,solution allow queue size,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,think batter fixed size base flexible worry size,4.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,dont need shift element like queue,4.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,memory constricted,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,fixed size cannot added removed easily,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,easier scalable,5.0
9.5,"Which implementation  array-based vs. list-based  is preferred for a queue, and why?",link based dynamic size constraint,becuase array array size need pre defined changed dynamically,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push insert something top,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push corresponds operation insert new item one end top back respectively at,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,almost opposite,2.5
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push = pop = dequeue,4.5
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,sure question mean use push detect palindrome,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,queue equivalent push dequeue queue equivalent pop,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,would push put item end list,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push method operation,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,corresponds push dequeue corresponds pop,4.5
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push corresponds similarly place new element queue,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,fifo first first,1.5
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.6,What is the stack operation corresponding to the enqueue operation in queues?,push,push,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,might higher priority others easily inserted front list anywhere,1.5
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,otherwise thing would never printed,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue first first behavior,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,better fifo lifo,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,course,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,person wanted print first first served,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,guarantee job executed order come,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,queue would preferable stack use print would print order sent,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,printer usually first come first serve,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,first first principle would last last could possibly let first item added get removed timely manner,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,first job sent first job printed,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,unfair first job finish last,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,take job waited longest,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,client waited longest first served,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,would say better first thing try print first one come fifo,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,want execute order received,5.0
9.7,"What data structure is more appropriate for scheduling printing jobs at a printer, a stack or a queue?",queue,,5.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,hierarchy node sorted particular order node ancestor except root child except leaf,4.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite set one node specially designated node called root remaining node partitioned disjoint set set,5.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite set one node specially designated node called root,4.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,connected undirected graph without cycle,4.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,data structure contains root internal node external node node reference another node mean pointer pas reference root base parent leaf node end point null,5.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,series node node link node,3.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,infinite set node root descendant addition leaf,3.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,set one node hierarchically organized one special root node,4.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite set one node specially designated node called root,3.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,one node hierarchy starting root branching like subtrees,5.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,data structure node linked hierarchical manner,3.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,grouping data parent child structure,3.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,list number list made comparing value node already adding appropriate spot list made node left right pointer,3.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,branched data structure node leaf special node called root parent node however like node 2 node link namely one right one left,4.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,organizes data nonlinear hierarchical form item one successor partitioned root node subset general subtrees root,5.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite set one node specially designated node called root remaining node partitioned n gt 0 disjoint set n plus 1 element set,5.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite set node start root terminates leaf,4.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,set data arranged pointer element many pointer two pointer point element,2.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,data structure one data node contains data node number attached child node creating branched structure tree named,4.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite collection node start element called root child child child get leaf last element child,4.5
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,nonlinear two dimensional data structure,2.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite set one node root node node split tree lesser value root,4.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,finite number node one root node node certain number child node child also,5.0
10.1,What is a tree?,collection node special node called root rest node partitioned one disjoint set set tree,type data structure element attached one element directly beneath,4.0
10.2,What is the height of a tree?,length longest path root leaf,level generation people count root generation,4.0
10.2,What is the height of a tree?,length longest path root leaf,term level node empty 0 otherwise equal maximum level node,4.5
10.2,What is the height of a tree?,length longest path root leaf,number node longest path root leaf,5.0
10.2,What is the height of a tree?,length longest path root leaf,number node longest path root leaf,5.0
10.2,What is the height of a tree?,length longest path root leaf,= number time must progress level reach leaf greatest distance root,5.0
10.2,What is the height of a tree?,length longest path root leaf,length root furthest leaf,5.0
10.2,What is the height of a tree?,length longest path root leaf,number generation level root,4.5
10.2,What is the height of a tree?,length longest path root leaf,number level root leaf farthest away,5.0
10.2,What is the height of a tree?,length longest path root leaf,depth furthest leaf,4.5
10.2,What is the height of a tree?,length longest path root leaf,number node root leaf,3.5
10.2,What is the height of a tree?,length longest path root leaf,distance deepest leaf root,5.0
10.2,What is the height of a tree?,length longest path root leaf,number generation level,4.5
10.2,What is the height of a tree?,length longest path root leaf,intensity child say begin one node thats one add two child node two child node two child node you re current would 4,3.0
10.2,What is the height of a tree?,length longest path root leaf,number level like minimum depth 3 8 8 node,3.5
10.2,What is the height of a tree?,length longest path root leaf,number node longest path root leaf,5.0
10.2,What is the height of a tree?,length longest path root leaf,number node longes path root leaf,5.0
10.2,What is the height of a tree?,length longest path root leaf,equal number level level root node terminal node,4.5
10.2,What is the height of a tree?,length longest path root leaf,number generation level,4.5
10.2,What is the height of a tree?,length longest path root leaf,depth subtrees many layer deep,4.5
10.2,What is the height of a tree?,length longest path root leaf,number generation,4.5
10.2,What is the height of a tree?,length longest path root leaf,number node longest path root leaf,5.0
10.2,What is the height of a tree?,length longest path root leaf,number distinct level separation,4.0
10.2,What is the height of a tree?,length longest path root leaf,many level node,4.5
10.2,What is the height of a tree?,length longest path root leaf,connection element called branch tree often called inverted tree normally drawn root top,1.5
10.3,What is a leaf?,node child,child parent node child node,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,tree node child,5.0
10.3,What is a leaf?,node child,end point tree node child,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,new item tree child,3.0
10.3,What is a leaf?,node child,node child terminating node,2.0
10.3,What is a leaf?,node child,node degree 0,4.0
10.3,What is a leaf?,node child,node degree 0,4.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,last child branch,4.5
10.3,What is a leaf?,node child,last value tree value child attached,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,node degree 0 last node tree furtherest away root,4.0
10.3,What is a leaf?,node child,endpoint tree contains pointer pointer set null,4.5
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,element tree child,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,node child node,5.0
10.3,What is a leaf?,node child,node child,5.0
10.3,What is a leaf?,node child,element bottom inverted tree element called leaf,5.0
10.4,What is a binary tree?,tree maximum number child per node two,data structure done two child typical called left right node right node usually greater left node parent node,4.5
10.4,What is a binary tree?,tree maximum number child per node two,set node either empty partitioned root node one two subset subtrees root node two child right left child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,set node either empty partitioned root node one two subset subtrees root node two child left child right child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,set zero node partitioned root node two possibly empty set tree thus node two child left child right child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,parent maximum 2 child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,node 2 child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,two child right subtree left subtree,5.0
10.4,What is a binary tree?,tree maximum number child per node two,node maximum two degree two child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,data structure node two child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,2 joint left right,4.5
10.4,What is a binary tree?,tree maximum number child per node two,search also condition node may maximum 2 child,4.5
10.4,What is a binary tree?,tree maximum number child per node two,parent max two child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,list number ordered compared compare number already added,2.0
10.4,What is a binary tree?,tree maximum number child per node two,node 2 child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,starting root node branch one two subset subtrees root node two child left child right child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,set node either empty partitioned root node one two subset subtrees root node two child left child right child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,maximum 2 child per node,5.0
10.4,What is a binary tree?,tree maximum number child per node two,element contain two pointer,5.0
10.4,What is a binary tree?,tree maximum number child per node two,two child node,5.0
10.4,What is a binary tree?,tree maximum number child per node two,every parent two child,4.5
10.4,What is a binary tree?,tree maximum number child per node two,every node two child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,special search node either 2 1 0 child,4.5
10.4,What is a binary tree?,tree maximum number child per node two,special type node maximum 2 child,5.0
10.4,What is a binary tree?,tree maximum number child per node two,special type inverted element two branch,4.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,data structure node value total order defined value left subtree contains value le parent node vice versa right subtree,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,value node n greater value every node n left subtree le every node n right subtree,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,value node n greater value every node n left subtree le value every node n right subtree,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,key node n greater key node n left subtree le key node n right subtree,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,split based value make easy one compare desired value root root greater left side le right side thing recursively,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,node two node node left le root node right greater root,4.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,special rule subtrees right smaller node value subtrees left larger node value,4.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,tree similar tree implemented organize data specific way later searching,3.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,node value total order defined value left subtree node contains value le node value right subtree node contains value greater equal node value,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,data organized specific argument,2.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,also condition node may maximum 2 child input data compared data starting root value smaller root traverse left larger traverse right becomes leaf,4.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,data order left right,4.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,set easily searched number based location compared previous node,3.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,child ordered right side greater current node left le equal current node,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,value node n greater value every node n left subtree le every value n right subtree,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,finite set node either empty const root two disjoint tree call left right subtrees,2.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,similar key nonempty left subtree right subtree smaller larger key root subtree value node left subtree node le node value value node right subtree node greater node value,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,set number arranged link node contain two pointer element node left parent smaller node right larger recursive implementation implies traversed order output would sorted,4.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,special arranged every left child node contains value le parent every right child node contains value greater parent,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,special organization data left child element le right child larger,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,smaller value located left parent node larger value located right parent node,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,special node two child labeled left child right child,2.5
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,node unique key left child node value le node right child node higher value node,5.0
10.5,What is a binary search tree?,binary tree property node left child smaller parent turn smaller right child,tree fundamental data structure used construct abstract data structure set multisets associative array,2.5
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,every node first visit left sub visit parent node right sub,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,visit node order according data value,2.5
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,traverse let visit node order according data value,3.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,used visit node search search key order,3.5
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,left side root right side,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,printing order least greatest done going far left possible printing parent right move,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,order go left root right,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,retrieve start furthest left hand leaf check parent right side sibling go level repeat get root,4.5
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,traverse left subtree visit root traverse right subtree,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,post order,1.5
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,order start root right child left child recursively,1.5
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,left child gt parent gt right child,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,go lowest highest inside,2.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,starting displaying node furthest right node node right recursive order,4.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,travel left right,3.5
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,void node ptr ptr ptr gt left out lt lt ptr gt data ptr gt right,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,root middle left subtree traversed first root finally right subtree,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,visit left branch first parent node right branch recursively,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,visit left branch node way deepest left leaf visiting node visiting entire left branch node visit node right branch following pattern left child node right child,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,left middle right,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,traverse node left visit root traverse node right,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,would go furthest left node root right left right exist would return one node previous reached root go furthest left node right side root continue process,5.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,mean traverse one subtree node look node traversing subtree node,4.0
10.6,What is the inorder traversal of a binary tree?,traverse left subtree root right subtree,level order method level visited successively starting level 0 root node node visited left right level push pop method,2.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,runtime order log n n number node,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,size n take log n specified,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,n 1 2 algorithm compare,2.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,equivalent height,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,depends half level,3.5
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n balanced tree,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,n 1,2.5
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n,2.5
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n,2.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,minimum log n log 2 maximum n search n number node,4.5
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,n,3.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,take 3,1.5
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n n equal number node,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,take number level compare one number level,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,take one le height big notation take log n balanced,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,log n,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,n ^ k 1 k height,1.5
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,take h h height,5.0
10.7,How many comparisons does it take to find an element in a binary search tree?,height tree log number element tree,2 way key comparison,1.0
11.1,What are the elements typically included in a class definition?,function member data member,name file parameter must take perform function also brief description,3.0
11.1,What are the elements typically included in a class definition?,function member data member,access specifier function oftentimes constructor,3.0
11.1,What are the elements typically included in a class definition?,function member data member,function prototype usually declared public data member used usually declared private,5.0
11.1,What are the elements typically included in a class definition?,function member data member,user defined contains member data function keyword used includes bracket,4.0
11.1,What are the elements typically included in a class definition?,function member data member,member function data member,5.0
11.1,What are the elements typically included in a class definition?,function member data member,function variable used object defined,4.0
11.1,What are the elements typically included in a class definition?,function member data member,data member function function definition variable,5.0
11.1,What are the elements typically included in a class definition?,function member data member,return type input parameter,2.5
11.1,What are the elements typically included in a class definition?,function member data member,constructor data member method,4.5
11.1,What are the elements typically included in a class definition?,function member data member,function member member attribute word variable function,5.0
11.1,What are the elements typically included in a class definition?,function member data member,access modifier data type variable function signature,4.0
11.1,What are the elements typically included in a class definition?,function member data member,variable function prototype,4.0
11.1,What are the elements typically included in a class definition?,function member data member,public private variable initiation function,4.0
11.1,What are the elements typically included in a class definition?,function member data member,return value accepted value,1.5
11.1,What are the elements typically included in a class definition?,function member data member,includes name class constructor extra function variable,4.0
11.1,What are the elements typically included in a class definition?,function member data member,parameter type name return type code executed,3.0
11.1,What are the elements typically included in a class definition?,function member data member,data member variable function,5.0
11.1,What are the elements typically included in a class definition?,function member data member,constructor function variable native,4.0
11.1,What are the elements typically included in a class definition?,function member data member,function data member,5.0
11.1,What are the elements typically included in a class definition?,function member data member,data member function definition,5.0
11.1,What are the elements typically included in a class definition?,function member data member,member function data member,5.0
11.1,What are the elements typically included in a class definition?,function member data member,constructor function definition,3.5
11.1,What are the elements typically included in a class definition?,function member data member,name data function method,4.5
11.1,What are the elements typically included in a class definition?,function member data member,includes definition constructor public private function course also includes header necessary c library,3.0
11.1,What are the elements typically included in a class definition?,function member data member,name semicolon end defintion private public followed,3.0
11.1,What are the elements typically included in a class definition?,function member data member,constructor private public variable function prototype,4.0
11.1,What are the elements typically included in a class definition?,function member data member,data variable function data member,5.0
11.1,What are the elements typically included in a class definition?,function member data member,definition include name type parameter,3.0
11.1,What are the elements typically included in a class definition?,function member data member,variable function prototype,4.5
11.1,What are the elements typically included in a class definition?,function member data member,input return type,2.5
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,3.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private restricted,3.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private protected,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public function variable outside private function variable,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private protected,2.5
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,4.5
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,private public protected,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,c private public,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,static long unsigned,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,private public protected friend,1.5
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,c may include public private static,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,local global local variable function specific,3.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public protected private,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,private public,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public accessed program private accessed function outside function call,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private protected,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,3.5
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private protected,4.5
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,function data member given specification public private friend public given function member given specific right,3.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,data member data function,3.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,4.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,5.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private,3.0
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public accessed outside private accessible inside inherited protected accessible inside inherited,4.5
11.2,What are the access-specifiers that can be used in a C plus plus class definition?,private public,public private protected,2.5
11.3,How are objects initialized when they are created?,using constructor,ie guidebook my grade book call upon class give name like shown,5.0
11.3,How are objects initialized when they are created?,using constructor,named instance template formed class named instance modified different class,5.0
11.3,How are objects initialized when they are created?,using constructor,answered,5.0
11.3,How are objects initialized when they are created?,using constructor,value given object defined certain task,5.0
11.3,How are objects initialized when they are created?,using constructor,dot constructor object,5.0
11.3,How are objects initialized when they are created?,using constructor,objectname classname call function class objectname function,5.0
11.3,How are objects initialized when they are created?,using constructor,object refers class constructor initialize based return type parameter passed compiler auto create one one provided,5.0
11.3,How are objects initialized when they are created?,using constructor,classname objectname input parameter,5.0
11.3,How are objects initialized when they are created?,using constructor,class called constructor,5.0
11.3,How are objects initialized when they are created?,using constructor,constructor default provided user programmer specified constructor,5.0
11.3,How are objects initialized when they are created?,using constructor,usually beginning program usually main function class name,5.0
11.3,How are objects initialized when they are created?,using constructor,lt variable type gt lt variable name gt want initialize variable certain value lt variable type gt lt variable name gt = lt value gt,5.0
11.3,How are objects initialized when they are created?,using constructor,variable set given value 0 none given,0.5
11.3,How are objects initialized when they are created?,using constructor,object constructor called whether one provided c assigns default constructor,5.0
11.3,How are objects initialized when they are created?,using constructor,essentially copy corresponding class complete separate variable,4.5
11.3,How are objects initialized when they are created?,using constructor,class guidebook would initialize main function use constructor guidebook class constructor specified found c use default one parameter guidebook my grade book bit code class guidebook object my grade book,2.5
11.3,How are objects initialized when they are created?,using constructor,stating classname first assigning name object within object place,5.0
11.3,How are objects initialized when they are created?,using constructor,constructor,5.0
11.3,How are objects initialized when they are created?,using constructor,value specified declaration anywhere declaration corresponding,5.0
11.3,How are objects initialized when they are created?,using constructor,default constructor object class constructor specified us default system constructor,5.0
11.3,How are objects initialized when they are created?,using constructor,using name class,5.0
11.3,How are objects initialized when they are created?,using constructor,value dependent compiler,5.0
11.3,How are objects initialized when they are created?,using constructor,memory allocated accordance type initialization input,5.0
11.3,How are objects initialized when they are created?,using constructor,assigned space memory name given object point memory address data resides,5.0
11.3,How are objects initialized when they are created?,using constructor,using constructor,0.5
11.3,How are objects initialized when they are created?,using constructor,giving value,5.0
11.3,How are objects initialized when they are created?,using constructor,declaring class first name variable variable need put constructor ex class class x,5.0
11.3,How are objects initialized when they are created?,using constructor,giving object type name initial value,5.0
11.3,How are objects initialized when they are created?,using constructor,0,5.0
11.3,How are objects initialized when they are created?,using constructor,obj variable call within class e classname objectname etc,5.0
11.4,What is a function signature?,name function list parameter including type,name parameter must receive order perform return type,1.5
11.4,What is a function signature?,name function list parameter including type,element make unique variable call also suppose includes program,3.5
11.4,What is a function signature?,name function list parameter including type,return type name number type parameter,0.0
11.4,What is a function signature?,name function list parameter including type,prototype contains function data member,2.5
11.4,What is a function signature?,name function list parameter including type,declaration includes parameter type number parameter,2.5
11.4,What is a function signature?,name function list parameter including type,declaration,1.5
11.4,What is a function signature?,name function list parameter including type,includes name accepted parameter return type,5.0
11.4,What is a function signature?,name function list parameter including type,return type input parameter,3.0
11.4,What is a function signature?,name function list parameter including type,contains name parameter return type included,3.5
11.4,What is a function signature?,name function list parameter including type,return type name parameter type,5.0
11.4,What is a function signature?,name function list parameter including type,tell parameter includes call,2.5
11.4,What is a function signature?,name function list parameter including type,name well return accepts,2.5
11.4,What is a function signature?,name function list parameter including type,body hold actual code,1.0
11.4,What is a function signature?,name function list parameter including type,return type accepted pas value type take,5.0
11.4,What is a function signature?,name function list parameter including type,specifies name input variable,2.5
11.4,What is a function signature?,name function list parameter including type,parameter type name return type part,5.0
11.4,What is a function signature?,name function list parameter including type,name accepts return,3.5
11.4,What is a function signature?,name function list parameter including type,unique identifier includes input variable along name excludes output type,5.0
11.4,What is a function signature?,name function list parameter including type,order number type data item included inside parameter,2.5
11.4,What is a function signature?,name function list parameter including type,scope type parameter give property defines function,4.5
11.4,What is a function signature?,name function list parameter including type,name function return type parameter used,2.5
11.4,What is a function signature?,name function list parameter including type,include name parameter body,1.0
11.4,What is a function signature?,name function list parameter including type,name argument passed,2.0
11.4,What is a function signature?,name function list parameter including type,used prototype set object type take parameter without name given object,1.0
11.4,What is a function signature?,name function list parameter including type,name parameter called,5.0
11.4,What is a function signature?,name function list parameter including type,function name parameter,1.5
11.4,What is a function signature?,name function list parameter including type,parameter needed return type name,5.0
11.4,What is a function signature?,name function list parameter including type,includes name number type parameter return type,2.5
11.4,What is a function signature?,name function list parameter including type,uniquely separate overloaded function includes return type parameter list,1.0
11.4,What is a function signature?,name function list parameter including type,sig class recognizes main rather specification,2.5
11.5,What is a recursive function?,function call,call upon self solve problem time call upon self split problem simpler form reach base case simplest form problem,5.0
11.5,What is a recursive function?,function call,call perform operation factorial,4.0
11.5,What is a recursive function?,function call,answered,5.0
11.5,What is a recursive function?,function call,base case call upon problem becomes smaller terminates,3.0
11.5,What is a recursive function?,function call,call run multiple time base case reached,5.0
11.5,What is a recursive function?,function call,call untill reach base case,2.5
11.5,What is a recursive function?,function call,call time must get smaller eventually must converge base case otherwise start infinite loop,5.0
11.5,What is a recursive function?,function call,call base case met,5.0
11.5,What is a recursive function?,function call,call call problem diminished,5.0
11.5,What is a recursive function?,function call,call perform certain task,5.0
11.5,What is a recursive function?,function call,call usually called base case base case correct cause infinite loop,4.0
11.5,What is a recursive function?,function call,call order solve problem,5.0
11.5,What is a recursive function?,function call,call find simplest form solution base case,2.0
11.5,What is a recursive function?,function call,call repeatedly base case achieved fundamental idea break one large problem series smaller similar problem,3.5
11.5,What is a recursive function?,function call,typically simplifies problem calling arriving base case recursively return solution,5.0
11.5,What is a recursive function?,function call,break large problem two smaller problem call solve smaller problem base case terminating point reached base case definite answer called longer recurses unwinds back call determine answer original large problem,5.0
11.5,What is a recursive function?,function call,call loop base case loop exit,5.0
11.5,What is a recursive function?,function call,call base case met,4.5
11.5,What is a recursive function?,function call,know solve base case call directly indirectly base case reached,5.0
11.5,What is a recursive function?,function call,call us base case stop recursion,5.0
11.5,What is a recursive function?,function call,call each call get closer close base case,5.0
11.5,What is a recursive function?,function call,divide conquers problem base case eventually reached call base case satisfied,4.0
11.5,What is a recursive function?,function call,call definition code,5.0
11.5,What is a recursive function?,function call,solves problem repeatedly calling initial problem broken successively smaller part much simpler base case reached solution piece problem returned step time,5.0
11.5,What is a recursive function?,function call,invoke ana unless reach ba case,5.0
11.5,What is a recursive function?,function call,solves problem dividing problem smaller problem calling self base case reached,5.0
11.5,What is a recursive function?,function call,call till base case reached return back original,5.0
11.5,What is a recursive function?,function call,execution call base case reached,5.0
11.5,What is a recursive function?,function call,call usually used split problem several smaller problem type,5.0
11.5,What is a recursive function?,function call,call self till base case met,2.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration performer series check loop,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,method use loop program instead function call,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,solving using using iteration,0.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration would efficient repetition structure,4.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,one use iteration using simple loop,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration loop loop able accomplish desired outcome may faster recursion also harder understand,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,also iterative,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iterative,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,using iteration loop,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,another instead using using iteration,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,function often using iterative function run faster often complicated,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,function using iterative method,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,many solution may also looping control statement etc,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,using iterative function repeat specified operation set operation terminating point base case reached,4.5
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iterative,4.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,using iterative call,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,using iterative solution instead,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,using iterative solution loop,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,using recursion iteration,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,recursively iterative function iterative replacement may difficult program often lead efficient solution,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration,4.5
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration like loop loop loop,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration using loop,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iterative,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,iteration,5.0
11.6,What is the alternative way to solve a problem that could be solved through recursive functions?,iteration,alt use parameter call function,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,retains modified element called upon latest element modified keep original element,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,specific size cannot grow also array cannot accessed outside program created,4.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,array created initialized function called destroyed function terminates,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,initialized non cannot c,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,remains throughout execution program,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,called compiler ignore line come,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,available whole program whereas available within scope pas reference,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,predetermined size size cannot altered,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,array changed altered,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,retain value stored element function call reinitialize default value,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,cause anything initialized set 0,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,null character end,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,array cannot changed normal array changed,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,accessed outside method without passing argument function class,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,class scope allowing remain array might recycled,4.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,change un initialize called later unless explicitly acted upon terminate change across object automatic local cleared uninitialized called later outside specific scope,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,already defined program know length start whereas non array assigned later,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,non must reinitialize every function call initialize unless otherwise forced,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,retains modified value function call automatic array reset initial value function end,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,keep value initialized every time class function called data lost function end,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,used function called constant another way say const,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,value declared remain constant const value within manipulated,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,data cannot changed,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,standard array terminate function call finish removed memory parent function terminates leaving available function new instance original function,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,defining does lose scope local function make programming scalable non lose scope inside local function,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,array called anywhere,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,cannot changed regular changed passed function manually,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,edited throughout program non edited within given function,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,allocated program begin run freed program exit limited scope non allocated freed every time come scope,5.0
11.7,What is the difference between an array that is declared as static and one that is not?,static array intialized function called,predetermined size cannot passed vi versa,3.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,null n element end,5.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,basically non command key keyboard press collection letter number stored together used later commonly string used word char used le operation performed useful way,3.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,programmer must provide null terminating character using must also ensure array large enough contain input null terminating character,5.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,followed null statement example,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,contains word contain phrase,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,single entity letter combined one letter assigned memory value assigned e 0 1,4.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,contains null character end make easily possible get length array virtually unlimited length therefore size must declared limited,4.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,array store null character end,3.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,also white space declared white space,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,character array terminate whitespace including space string terminate encounter new line character,4.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,declared included array,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,array string read literal meaning anything within quote array read individual character,3.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,character array call individual letter array call word,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,character array end line character end,3.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,may contain null value last element whereas,4.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,terminating character 0 end,5.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,one extra member 0 end,3.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,size function call available character array usually static size,5.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,add null value end,4.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,array need end character signature made separate object value user enters,4.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,character stored different memory address accessed ea sly character easy able access character,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,passed array individual stored manipulated although word stored stored one word individual,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,change size passed function value whereas cannot change size passed function reference,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,act single object individual entity accessible specific class function array le robust allows direct access specific entity,4.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,array string stored character stored memory location array one memory location,4.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,array one element last element terminating element null doesnt exist,2.0
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,specific extra data end null 0,2.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,null character value end,3.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,put array also null terminating character added end 0,4.5
11.8,What is the main difference between a string of characters that is read into a variable of type string versus a variable of type char []?,char automatically add null 0 character end string,includes,3.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,example array n element split array equal half repeat process element,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,conquer mean dividing problem 2 + problem solved merged back together final solution whole problem,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,divide problem smaller smaller portion easier solve,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,element recur work merge sort quicksort,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,program half multiple time extent program whole easier work group solve problem,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,one larger string line value sepereate smaller line easily manipulate replace order,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,split problem smaller manageable part proceed address smaller problem,4.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,dived breaking large complex program small easy solve component,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,dividing larger problem smallest incident problem solving smallest incident,3.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,break large data structure smaller sub unit easier manipulate,3.5
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,technique take sorting algorithm break array smaller element array tackle problem run algorithm,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,divide problem two piece work piece separately allowing faster approach 2 separate smaller problem,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,take problem smaller problem solve smaller problem smaller problem solve thus solving whole problem process,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,idea split problem half solve smaller split problem,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,split large problem simpler problem point solves simpler problem merges simple solution together answer large problem,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,refers abstraction act separating large complex problem smaller easier problem solved relatively simple algorithm,4.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,take large problem split two easier faster solution make better readability,4.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,taking larger problem splitting simpler smaller problem,3.5
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,divide problem singular unit work problem piece piece problem solved,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,smaller part easier compare comparing whole divide problem half easily compare work backwards putting back together give solution,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,take data divide two part work part individually item found,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,idea take large problem split n smaller problem making program easier read modify,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,recursive solution keep dividing problem half base case reached,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,dividing conquering mean breaking problem two smaller problem solving putting two solution together,3.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,big problem small problem solve small problem join small solved element problem two ore element array array part compare element comparison element array n element first half n 2 element,2.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,array half sort half sort back one array,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,take class break everything supposed easily managed function,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,shown use cpp header file splitting program smaller subsection individual code becomes easier write keep opposed code one file,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,problem big split smaller problem type solve solution smaller problem give solution larger original problem,5.0
11.9,Briefly describe the divide-and-conquer paradigm.,divide problem smaller subproblems solve recursively combine solution solution original problem,separating large program smaller class target reached,1.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,us divide conquer technique recursively merging back together compare element together sorted list done reversing divide conquer technique,4.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,work removing item sepperate memory location merging back together order,5.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide array two half sort half merges two half together,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide two sublists sublists break length 1 merges sublists sorted,4.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,us divide conquer idea divide array half multiple time join element array back sorted array best sorting algorithm besides quicksort,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide line half continuously get single value recombine value form sorted line,3.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,continually split array half side half put back together organized,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,split array element smaller array array reach size 1 merges smaller array array size 2 move next step merges next array,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide conquer,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,break single array many array individual element element reconstruct back single array,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,break array half continues 2 element compare sort merges back keep sorting algorithm,4.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide problem half organizes half brings two half together,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,take array split two solve simpler problem two answer correct order,5.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,recursively divide array half element remains sort data way recursive call merging cell,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,recursively divide array two array array 1 element point merges 1 element array larger sorted array final returned array sorted version initial array,5.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,continuously break array half sort array concatenates back together sorted array,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,take array split half sort two half either recursion iteration compare together giving third array full sorted list half rejoined,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,split large array small array recurs array size 1 merges array back together source array completely sorted,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,merges divide array smaller half combine sorted sub arrays sorted array,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,break array half comparing two value sort two value merges back broken part sorted level merging set together till return back whole array order,5.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide data two separate array sort two array merges back back together recursively,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,take initial array split two temporary smaller array two smaller array back single array,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide data half data element reached merges element together according placement comparison rest data,4.5
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,us divide conquer strategy sorting array part merging sorted part back together,5.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide recursive big array two array two array togather recursively,5.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,divide array half sort half calling self thus dividing half sorting array sorted putting element back original array sorted,3.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,take array split half sends half back recursively merges sort two half start going back,3.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,split array two half sort two smaller array merges back together form sorted array,3.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,continually divide array set container half reach point element left merges set two sorted array container,5.0
11.11,Briefly describe in one sentence how does merge sort work?,split original array two sort two half merges sorted array,split array element smaller smaller array till value 1 reached,3.5
12.1,What is a pointer?,address location memory,variable memory hold address another memory location point,5.0
12.1,What is a pointer?,address location memory,variable contains memory address given value,5.0
12.1,What is a pointer?,address location memory,variable store address another variable,5.0
12.1,What is a pointer?,address location memory,variable hold memory address location another variable,5.0
12.1,What is a pointer?,address location memory,data type point address memory contains certain information used pas reference save memory,5.0
12.1,What is a pointer?,address location memory,point location memory certain data type,5.0
12.1,What is a pointer?,address location memory,variable point address location another variable represented,5.0
12.1,What is a pointer?,address location memory,variable hold address given variable given data type,5.0
12.1,What is a pointer?,address location memory,programming data type whose value point another value stored computer memory address,5.0
12.1,What is a pointer?,address location memory,data type point specific memory address,5.0
12.1,What is a pointer?,address location memory,like variable except hold address memory variable physical information,5.0
12.1,What is a pointer?,address location memory,reference memory location,5.0
12.1,What is a pointer?,address location memory,alias object memory,4.0
12.1,What is a pointer?,address location memory,variable contains memory address something use value array even function,5.0
12.1,What is a pointer?,address location memory,data type memory address value,3.5
12.1,What is a pointer?,address location memory,form storing data keep location memory data type object,5.0
12.1,What is a pointer?,address location memory,contains object memory address,5.0
12.1,What is a pointer?,address location memory,variable contains memory address data object,5.0
12.1,What is a pointer?,address location memory,element reference memory location,5.0
12.1,What is a pointer?,address location memory,object point specific place memory variable value stored,5.0
12.1,What is a pointer?,address location memory,variable store address memory location,5.0
12.1,What is a pointer?,address location memory,variable point address memory contains data contain point data memory address,5.0
12.1,What is a pointer?,address location memory,variable memory address variable,5.0
12.1,What is a pointer?,address location memory,point location memory data stored,5.0
12.1,What is a pointer?,address location memory,variable hold address another variable access content variable,5.0
12.1,What is a pointer?,address location memory,memory address point data member,5.0
12.1,What is a pointer?,address location memory,data type store memory address another variable,5.0
12.1,What is a pointer?,address location memory,like variable hold address memory physical address,3.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,try several set data includes worst case best case random case also try run program different computer spec,4.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,answered,0.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,complexity using big logarithmic log n linear n exponential n ^ 2 quadratic n ^ k k gt 1 polynomial ^ n n gt 1,2.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,using sort counting principle number operation performed,4.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,mean would actually write prototype measure take run given certain parameter,5.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,relationship different input size,4.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,opposite theoretical assessment determine runtime run code first determine runtime recommended limited test include possibility data hardware used process data,4.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,answered,0.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,using big equation tell,3.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,create run multiple time amount take average result,5.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,keep value many operation take add value function called,3.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,big oh,2.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,program various input data system,5.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,run program different data size like 10 ^ x increase x measure completion speed program find pattern attempt measure important keep software hardware however make testing inferior theoretical eye,4.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,run program see many time thing called runtime function based,4.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,number time specific segment get called per unit work,3.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,every call memory add multiply equation type n,2.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,adding marker called another marker immediately change calculate efficiency speed computer cpu,3.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,big h notation,2.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,measure actual = second,5.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,specific set data,4.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,term measured number operation required complete function number usually expressed big notation,3.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,run code n time get average value drop constant lowest number example f x = + 1 bef f x = n,4.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,measure actual program run calculate using input operation done,5.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,adding number operation performed based worst case possible,2.5
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,would run see long take,5.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,trying different set input amount actually take,5.0
12.2,What is the experimental approach for measuring the running time of an algorithm?,implement algorithm measure physical running time,input various input system,4.5
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,4.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,log ^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,4.125
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,log ^ log ^ ^,2.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,3.75
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,go largest smallest ^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,1.75
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,2.25
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,least greatest ^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,4.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,lowest longest ^ ^ ^,3.625
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,2.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,linear logarithmic exponential linear linear,1.5
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,quickest top slowest bottom ^ ^ ^,4.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,longest shortest ^ ^ ^,3.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^ long,3.25
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,lowest highest 1 long long ^ ^ 4 ^ 5,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,4.125
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,^ ^ ^,2.25
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,worst best ^ ^ ^,5.0
12.3,Order the following functions by their running time: n to the power of 2; log  log n  ; 2 to the power of  log n  ; n!; n to the power of 3.,log log n 2 power log n n power 2 n power 3 n,long ^ ^ ^,4.75
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,scan list selects smallest largest element place front increment cur ptr one scan list next smallest largest element place respect sorted element,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,search array lowest value swap first value array search next lowest value swap second item array,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,compare largest element front element swap data according value needed,4.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,sorting algorithm divide list half two list compare first element list put element another list smaller element bigger one,2.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,iterate list assume list integer find smallest one put separate sorted list traverse find next smallest move sorted section repeat run element,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,selects smallest element list second smallest sort accordingly,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,select smallest element place left select smallest element respect item already left continue till end collection item,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,scroll data structure looking lowest highest unsorted piece data move held spot increment spot one start process,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,work finding smallest element compare largest sort element,2.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,usually recursive sorting method divide element sorted half repeatedly smallest case way sorting sorted,2.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,go middle list check see greater le value given move list accordingly add value proper place,2.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,find lowest element data set place behind pivot point,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,iterates array one element time seeking least value right replacing current value,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,traverse unsorted array looking smallest value found put beginning unsorted array performed several time output sorted array,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,run list find smallest largest value put appropriate position,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,pick number set value le number left number right number larger,3.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,take largest item unsorted array swap last item unsorted array,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,selecting first object comparing next object find one smaller switch two come back way see object previous last one greater switch decreasing range look finish middle,2.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,sort work going certain list go unsorted list selecting largest item list placing sorted array two array unsorted sorted complete step list sorted,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,work pulling value side leaving one value list insert value list value bigger go right smaller go left,2.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,search smallest element remaining data organization place largest point new data organization,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,sort array one element time first find element smallest key put first location within array list find next smallest put second location,5.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,select element compare 2nd element greater swap,3.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,selects smallest element list switch element correct position selects next smallest,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,start first element replaces smallest element found right repeat next element list,4.5
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,pick data member put new array pick another data member put order new array pick another insert correct place new array etc etc,3.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,search entire data set best element go current position move position search remainder set best element new position,4.0
12.4,"Briefly, how does selection sort work?",selects minimum array place first position selects minimum rest array place second position forth,iterates array one element time searching right replacing current value,4.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,link list grow infinite size array fix size,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,limited size like,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,link dont fixed size,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,variable size fixed size,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,definite size big small needed allocate extra memory element need size must defined,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,list dynamic size array fixed size take allot extra operation increase size,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,predetermine list size list ability large want adding memory needed,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,main list size adjusted runtime,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,able grow size element added list,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,confined specific size element added removed far easier also easier traverse,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,predetermined length,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,insert list far cheaper insert array array item one inserted must shifted list pointer replaced,4.5
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,may dynamically grown,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,dynamic change added subtracted easily linear memory pre specified size cast certain amount disk space make insertion difficult element must shifted reach end array done even data input run problem,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,indefinite size whereas specific size,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,predefined length thus virtually unlimited item list,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,grow dynamically unlike fixed size array,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,add many node like without specify list size array get big copy entire content another larger array get room,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,linked list fixed size fixed size,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,dynamic size static size,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,memory constraint total memory,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,primary ability become larger smaller data added removed list whereas may waste memory small data set run space large data set,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,array fixed size link list flexible adding deleting element,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,sizeable,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,dynamically allocated size change needed,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,specified size easier add remove,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,dont fixed size shifting need done insertion deletion,5.0
12.5,What is the advantage of linked lists over arrays?,linked list dynamic structure allow variable number element stored,list many dynamically grown limit,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,data structure c first element first element taken,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,abstract data type performs operation end list exhibit first first behavior,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,first first,4.5
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,abstract data type involves putting element back list queue use fifo first first idea first element list first come,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,data structure implement first first element longest first get served,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,data structure insert element end remove element front,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,collection element characteristic first first fifo first item first item additional item added end list,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,data structure insert data fifo configuration data input structure always end data taken always beginning,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,particular set entity put certain order enqueue dequeue function,3.5
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,data type operates filo first last method mean first element inserted first element removed,4.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,like linked list except first last,2.5
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,like stack except follows fifo first first,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,data structure first node first node,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,first first data structure much like line movie theatre first object line first object handled enacted upon,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,lot like stack except first item put list first item taken list,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,first first list item like put 5 4 3 2 1 dequeue item remove item order put thus put 5 4 3 2 1 exact order,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,linked list first structure dequeue head list enqueue end list,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,list object follow rule first first essentially linked list go order first object list first taken,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,abstract data type based principle first first fifo first item inserted list first item taken,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,first first data structure implemented either linked list array,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,ordered list performs task order first first adding item place item behind rest taking item take one waited longest,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,linear first first data structure data must accessed order put oldest item accessible time main function defined enqueue dequeue,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,buffer follows rule first first useful computer science scheduleing,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,set element first element inserted first element removed,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,list item user access first element new element added end,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,list data follows fifo principle example would get line movie theater first one get buy ticket first,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,data structure hold set object fifo first first priority,5.0
12.6,What is a queue?,data structure store element following first first principle main operation queue enqueue dequeue,like linked list expect first last,1.5
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,pop remove head least recently inserted node push insert new node head,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push function pop function,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push put element pop take element,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop push add element pop remove top element,5.0
12.7,What are the main operations associated with a stack?,push pop,pop push,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop search empty,4.5
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop empty full maybe list show element operation count many element,5.0
12.7,What are the main operations associated with a stack?,push pop,pop push,5.0
12.7,What are the main operations associated with a stack?,push pop,empty push pop along usually,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop push put object pop take following first last rule,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop push add item top pop remove top item,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push add item top pop take first item top,5.0
12.7,What are the main operations associated with a stack?,push pop,function defined push put element top pop remove item top,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop full empty,5.0
12.7,What are the main operations associated with a stack?,push pop,pop push remove element insert element,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.7,What are the main operations associated with a stack?,push pop,push add element top pop remove top element,5.0
12.7,What are the main operations associated with a stack?,push pop,push pop,5.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,traverse size visit node three time order n running time,4.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler begin root visit node left bottom right side,5.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,visit order according data value,3.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,show function contains parent child sibling ancestor descendent use type algorithm also alternative sorting algorithm,2.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,start root circle around whole naming node see,4.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,visit parent visit child,1.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,start root traveling left visiting ever child along way till return root right,4.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,traversing terminal child sibling traverse terminal child parent sibling repeating first step sibling child root node visited,4.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler function iterative keep track pointer node,3.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,travel outside edge clockwise naming node,4.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,child root,2.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,go bottom left sub visit parent child,3.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler traverse rubber band style shape,3.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler specific way navigating involves following starting top moving along left side first cupping visit parent child node allows node visited left right bottom euler first progress left child one progress parent next child parent parent,4.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,run parent child order,3.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,start node left root proceeds visit node left right order visit root proceeds repeat previous step right side,3.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,travel root farthest left child backup travel leftmost child right side repeat reaching rightmost child,4.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,preorder order post order preorder = put parent node front child node order = put parent node left child right child node post order = put parent node child node,3.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler traversal go looking node put order left root right like inorder,4.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler begin root travel around outside element visited 3 time left bottom right,5.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler traverse branch straight one leaf start root repeat element traversed,4.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler visit every node starting root working around counterclockwise order post order pre order traversal seen variation euler,4.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,answered,0.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,traverse going left go right last child back top kind like going around,5.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,recursively visit every node list visit node left bottom right,5.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler way traverse come contact node three time left right bottom,5.0
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,traversing level level,1.5
12.8,What is the Euler tour traversal of a tree?,walk around tree starting root node seen three time left right,euler rubber band style shape,3.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,root set root null else deleting right leaf set right ptr parent null else deleting left leaf set left ptr parent null else deleting left right subtree child set max leaf child left subtree new child,4.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,traverse find child simply otherwise set data equal data one child set pointer child null,3.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,first attaching element deleting alternate node deleting,3.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,link node parent child,3.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,must information contains free memory garbage collect also pointer parent point wish,2.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,replace largest element left subtree replace smallest element right subtree,5.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,traverse till find wanting child child find left child attach root,4.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,link deleted left child deleted parent left child pointer,4.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,way first take root see node coming root node set root null,2.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,remove element move next highest element left place,4.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,,1.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,deletion depends upon child all assuming all deleted child set pointer null left child right child exclusively child replaces deleted two child left child right sub right child left subtree replace,5.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,leaf set parent pointer null single child set parent pointer child two child set one middle child remove child previous position leaf rightmost child left subtree leftmost child right subtree,5.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,must first establish proper replacement usually child soon deleted replacement found simply reassign going deleted deleted usurped remove deleted memory may used,4.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,depends located child deleted inside must replaced another work place,3.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,child right away otherwise put either furthest right left side furthest left right side place perform guarantee child get handled properly,5.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,create temp set temp value head null case head list set head equal temp temp,2.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,searching find replacing link greatest child left subtree least child right subtree,4.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,set node null point anything use operator clear space memory,1.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,must first traverse find appropriate value must make sure leaf pointer specific,3.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,leaf set parent pointer null must replace one either largest left smallest right done recursively needed,5.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,leaf simply deal located deleted memory parent reference changed null single child pointer made point child deleting two child easiest solution may copy entire subtree new array descendant add element taken subtree back main,4.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,answered,0.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,cannot cause 2 child,1.5
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,using recursion find determine whether leaf internal leaf set parent pointer null replace either child node,4.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,would link child node connected deleted remaining node way node right parent larger parent node left parent smaller,4.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,child one child replace whichever child child replace one child send child along side new,4.0
12.9,How do you delete a node from a binary search tree?,find node replace leftmost node right subtree rightmost node left subtree,pointer child 2 child set child th middle take place,3.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n n number node,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,number level height,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,height,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,given n element would n 2 find criterion,1.5
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,depends location looking root one step else smaller current go left larger current go right,2.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,2 ^ n n level,2.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,number function n 1,3.5
12.11,How many steps does it take to search a node in a binary search tree?,height tree,would n 2 element given n,1.5
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,constructed efficiently best case scenario log n time n number item constructed poorly instance root 1 progressing downwards right child last one way linear linked list worse case scenario would full traversal n time n number item,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,n n number node,4.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,depending way ordered could anywhere log n n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,worst case scenario = number level ie farthest position root best case = 1 step root,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,3 3 case,1.5
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n n equal total number node,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,number number level generation,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,find take number level,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,three visit root go right subtree visiting right subtree visit left subtree,2.5
12.11,How many steps does it take to search a node in a binary search tree?,height tree,log n,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,n n 1 2,1.5
12.11,How many steps does it take to search a node in a binary search tree?,height tree,1,2.5
12.11,How many steps does it take to search a node in a binary search tree?,height tree,take h h height,5.0
12.11,How many steps does it take to search a node in a binary search tree?,height tree,depends install whatever case repeat back along case primary,1.5
